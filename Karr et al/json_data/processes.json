{
  "title": "Mycoplasma genitalium WholeCellKB",
  "comments": "Generated by WholeCellKB on 2020-08-11T14:39:22.075851-07:00 at https://www.wholecellkb.org/export/Mgenitalium",
  "copyright": "2020 Covert Lab, Department of Bioengineering, Stanford University",
  "data": [
    {
      "reactions": [
        "ATPHs_ChromosomeCondensation_SMC"
      ],
      "wid": "Process_ChromosomeCondensation",
      "name": "Chromosome Condensation",
      "parameters": [
        "Parameter_0040",
        "Parameter_0041"
      ],
      "cross_references": [],
      "initialization_order": "12",
      "comments": "",
      "formed_complexes": [
        "MG_213_214_298_6MER_ADP"
      ],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "GTPHs_ChromosomeSegregation_CobQ",
        "GTPHs_ChromosomeSegregation_Era",
        "GTPHs_ChromosomeSegregation_MraZ",
        "GTPHs_ChromosomeSegregation_Obg"
      ],
      "wid": "Process_ChromosomeSegregation",
      "name": "Chromosome Segregation",
      "parameters": [
        "Parameter_0042"
      ],
      "cross_references": [],
      "initialization_order": "15",
      "comments": "",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "GTPHs_Cytokinesis_FtsZ"
      ],
      "wid": "Process_Cytokinesis",
      "name": "Cytokinesis",
      "parameters": [
        "Parameter_0043",
        "Parameter_0044",
        "Parameter_0045"
      ],
      "cross_references": [],
      "initialization_order": "16",
      "comments": "M. genitalium divide by binary fission. First, once the cell reaches a critical volume, the chromosomes are segregated by several enzymes including Smc, ScpA, and ScpB. Second, the protein FtsZ binds GTP, polymerizes, and forms rings around the cell's longitudinal midpoint. Next, FtsZ hydrolyzes GTP, causing the contraction of each FtsZ monomer and the cell membrane. Finally, the FtsZ forms successive smaller rings, resulting in septation.\n\nSimulation of binary fission will be begin when the cell reaches a critical volume, as estimated by the total cellular mass and experimentally measured density. Chromosome segregation will be modeled by a set of Boolean rules. FtsZ polymerization will be modeled according to the iterative pinching model described by Li et al, 2007 [PUB_0611]. Finally, the cytoplasm contents will be stochastically sorted between the two daughter cells.",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0611"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "DNADamage_AD_carbamoylmethyl6AD_acetamide",
        "DNADamage_AD_e1AD_DES",
        "DNADamage_AD_e1AD_EMS",
        "DNADamage_AD_e1AD_ENU",
        "DNADamage_AD_e3AD_DES",
        "DNADamage_AD_e3AD_EMS",
        "DNADamage_AD_e3AD_ENU",
        "DNADamage_AD_e6AD_DES",
        "DNADamage_AD_e6AD_EMS",
        "DNADamage_AD_e6AD_ENU",
        "DNADamage_AD_e7AD_DES",
        "DNADamage_AD_e7AD_EMS",
        "DNADamage_AD_e7AD_ENU",
        "DNADamage_AD_epsilon1N6AD_chloroethylene_oxide",
        "DNADamage_AD_FAPyAD_hydroxyl_radical",
        "DNADamage_AD_m1AD_MMS",
        "DNADamage_AD_m1AD_MMSO4",
        "DNADamage_AD_m1AD_MNNG",
        "DNADamage_AD_m1AD_MNU",
        "DNADamage_AD_m3AD_MMS",
        "DNADamage_AD_m3AD_MMSO4",
        "DNADamage_AD_m3AD_MNNG",
        "DNADamage_AD_m3AD_MNU",
        "DNADamage_AD_m6AD_CH3",
        "DNADamage_AD_m7AD_MMS",
        "DNADamage_AD_m7AD_MMSO4",
        "DNADamage_AD_m7AD_MNNG",
        "DNADamage_AD_m7AD_MNU",
        "DNADamage_AD_n2AD_NH3",
        "DNADamage_AD_oxo2AD_hydroxyl_radical",
        "DNADamage_AD_oxo8AD_hydroxyl_radical",
        "DNADamage_CSN64CSN_CSN64CSN_dewar_UVB_radiation",
        "DNADamage_CSN64THY_CSN64THY_dewar_UVB_radiation",
        "DNADamage_CSNCSN_CSN64CSN_UVB_radiation",
        "DNADamage_CSNCSN_cyclobutane_CSNCSN_UVB_radiation",
        "DNADamage_CSNTHY_CSN64THY_UVB_radiation",
        "DNADamage_CSNTHY_cyclobutane_CSNTHY_UVB_radiation",
        "DNADamage_CSN_CSN_GLYC_hydroxyl_radical",
        "DNADamage_CSN_e3CSN_DES",
        "DNADamage_CSN_e3CSN_EMS",
        "DNADamage_CSN_e3CSN_ENU",
        "DNADamage_CSN_epsilon3N4CSN_chloroethylene_oxide",
        "DNADamage_CSN_ho5CSN_hydroxyl_radical",
        "DNADamage_CSN_m3CSN_MMS",
        "DNADamage_CSN_m3CSN_MMSO4",
        "DNADamage_CSN_m3CSN_MNNG",
        "DNADamage_CSN_m3CSN_MNU",
        "DNADamage_CSN_m4CSN_CH3",
        "DNADamage_CSN_m5CSN_CH3",
        "DNADamage_CSN_O2eCSN_DES",
        "DNADamage_CSN_O2eCSN_EMS",
        "DNADamage_CSN_O2eCSN_ENU",
        "DNADamage_CSN_O2mCSN_MNNG",
        "DNADamage_CSN_O2mCSN_MNU",
        "DNADamage_DA_cyclodA_UVB_radiation",
        "DNADamage_DG_cyclodG_UVB_radiation",
        "DNADamage_DHURA_ho5Hydantoin_hydroxyl_radical",
        "DNADamage_f5URA_c5URA_hydroxyl_radical",
        "DNADamage_GammaRadiationInducedStrandBreak",
        "DNADamage_GN_e1GN_DES",
        "DNADamage_GN_e1GN_EMS",
        "DNADamage_GN_e1GN_ENU",
        "DNADamage_GN_e3GN_DES",
        "DNADamage_GN_e3GN_EMS",
        "DNADamage_GN_e3GN_ENU",
        "DNADamage_GN_e7GN_DES",
        "DNADamage_GN_e7GN_EMS",
        "DNADamage_GN_e7GN_ENU",
        "DNADamage_GN_epsilon1N2GN_chloroethylene_oxide",
        "DNADamage_GN_epsilonN23GN_chloroethylene_oxide",
        "DNADamage_GN_FAPyGN_hydroxyl_radical",
        "DNADamage_GN_m1GN_MMS",
        "DNADamage_GN_m1GN_MNU",
        "DNADamage_GN_m3GN_MMS",
        "DNADamage_GN_m3GN_MMSO4",
        "DNADamage_GN_m3GN_MNNG",
        "DNADamage_GN_m3GN_MNU",
        "DNADamage_GN_m7GN_MMS",
        "DNADamage_GN_m7GN_MMSO4",
        "DNADamage_GN_m7GN_MNNG",
        "DNADamage_GN_m7GN_MNU",
        "DNADamage_GN_m8GN_CH3",
        "DNADamage_GN_O6eGN_DES",
        "DNADamage_GN_O6eGN_EMS",
        "DNADamage_GN_O6eGN_ENU",
        "DNADamage_GN_O6mGN_MMS",
        "DNADamage_GN_O6mGN_MMSO4",
        "DNADamage_GN_O6mGN_MNNG",
        "DNADamage_GN_O6mGN_MNU",
        "DNADamage_GN_oxo8GN_hydroxyl_radical",
        "DNADamage_GN_oxoethyl7GN_chloroethylene_oxide",
        "DNADamage_hm5C_glchm5CSN_GLC",
        "DNADamage_hm5URA_f5URA_hydroxyl_radical",
        "DNADamage_hm5U_dhpURA_butylene_glycol",
        "DNADamage_hm5U_glchm5URA_GLC",
        "DNADamage_hm5U_gluTHY_GLU",
        "DNADamage_hm5U_putTHY_PTRC",
        "DNADamage_HYXN_XAN_hydroxyl_radical",
        "DNADamage_m3CSN_hm3CSN_hydroxyl_radical",
        "DNADamage_m5CSN_hm5CSN_hydroxyl_radical",
        "DNADamage_SpontaneousAbasicSiteStrandBreak",
        "DNADamage_SpontaneousBaseDeamination_adenine",
        "DNADamage_SpontaneousBaseDeamination_cytosine",
        "DNADamage_SpontaneousBaseDeamination_guanine",
        "DNADamage_SpontaneousBaseDeamination_m5C",
        "DNADamage_SpontaneousBaseLoss_adenine",
        "DNADamage_SpontaneousBaseLoss_cytosine",
        "DNADamage_SpontaneousBaseLoss_guanine",
        "DNADamage_SpontaneousBaseLoss_thymine",
        "DNADamage_THY64CSN_THY64CSN_dewar_UVB_radiation",
        "DNADamage_THY64THY_THY64THY_dewar_UVB_radiation",
        "DNADamage_THYCSN_cyclobutane_THYCSN_UVB_radiation",
        "DNADamage_THYCSN_THY64CSN_UVB_radiation",
        "DNADamage_THYTHY_cyclobutane_THYTHY_UVB_radiation",
        "DNADamage_THYTHY_THY64THY_UVB_radiation",
        "DNADamage_THY_DHTHY_hydrogen_radical",
        "DNADamage_THY_e3THY_DES",
        "DNADamage_THY_e3THY_EMS",
        "DNADamage_THY_e3THY_ENU",
        "DNADamage_THY_hm5URA_hydroxyl_radical",
        "DNADamage_THY_ho5ho6THY_hydroxyl_radical",
        "DNADamage_THY_m3THY_MMS",
        "DNADamage_THY_m3THY_MNU",
        "DNADamage_THY_O2eTHY_DES",
        "DNADamage_THY_O2eTHY_EMS",
        "DNADamage_THY_O2eTHY_ENU",
        "DNADamage_THY_O2mTHY_MNNG",
        "DNADamage_THY_O2mTHY_MNU",
        "DNADamage_THY_O4eTHY_DES",
        "DNADamage_THY_O4eTHY_EMS",
        "DNADamage_THY_O4eTHY_ENU",
        "DNADamage_THY_O4mTHY_MNNG",
        "DNADamage_THY_O4mTHY_MNU",
        "DNADamage_THY_THY_GLYC_hydroxyl_radical",
        "DNADamage_URA_DHURA_hydroxyl_radical",
        "DNADamage_URA_ho5ho6URA_hydroxyl_radical",
        "DNADamage_URA_ho5URA_hydroxyl_radical"
      ],
      "wid": "Process_DNADamage",
      "name": "DNA damage",
      "parameters": [
        "Parameter_0046",
        "Parameter_0047"
      ],
      "cross_references": [],
      "initialization_order": "17",
      "comments": "Simulates a spectrum of DNA lesions repaired by base excision repair, nucleotide excision repair, and homologous recombination repair:\n\nDNA strand breaks: caused by\n\t\n\thydrolysis and beta-elimination of abasic sites\n\tionizing radiation (alpha, beta particles, protons, electrons, gamma rays)\n\t\nSpontaneous base loss\nBase damage: caused by\n\t\n\tSpontaneous deamination\n\toxidation -- oxygen radicals generated by metabolism, ionizing radiation, chemicals\n\talkylation -- carbon radicals generated by metabolism, ionizing radiation, chemicals\n\tamidation -- nitrogen radicals generated by metabolism, ionizing radiation, chemicals\n\t\nIntrastrand cross links: caused by\n\t\n\tUV-B induced cyclization\n\t\n\n\nThe simulation does not consider the following types of DNA damage:\n\ninterstrand cross links: caused by bifunctional akylating agents\npsoralens\nDNA-protein cross links\nSugar-phosphate damage other than strand breaks\nDNA gaps\n\n\nAdditionally, the simulation does not consider mutiple damages per base or sugar-phosphate.\n\nCategorizes strand breaks in DNA segments (216 bases) according to scheme described in the track structure model literature [PUB_0486]:\n\n\n\t\n\t\tSymbol\n\t\tDefinition\n\t\n\n\n\n\tNB\n\tno strand break\n\n\n\tSSB\n\tsingle strand break\n\n\n\tSSB+\n\tmultiple single strand breaks on segment all on same strand\n\n\n\t2SSB\n\tsingle strand breaks on both strand separated by at least 10 bases on DNA segment \n\n\n\tDSB\n\ttwo single strand breaks on opposite strands within 10 bases \n\n\n\tDSB+\n\tdouble strand break with additional strand break on DNA segment\n\n\n\tDSB++\n\ttwo single strand breaks on same DNA segment\n\n\n\n\nReferences\n\nErrol C Friedberg, Graham C Walker, and Wolfram Siede (1995). DNA Repair and Mutagenesis. ASM Press: Washington, DC. [PUB_0461]\nNikjoo H, O'Neill P, Goodhead DT, and Terrissol M. Computational modelling of low-energy electron-induced DNA damage by early physical and chemical events (1997). Int J Radiat Biol. 71(5): 467-83. [PUB_0486]\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0461",
        "PUB_0486"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "AP_endonuclease",
        "AP_lyase",
        "deoxyribosephosphodiesterase",
        "DNAProcessiveCleavage_dAMP",
        "DNAProcessiveCleavage_dCMP",
        "DNAProcessiveCleavage_dGMP",
        "DNAProcessiveCleavage_dTMP",
        "DNA_ligation_repair",
        "DNA_polymerization_dATP_repair",
        "DNA_polymerization_dCTP_repair",
        "DNA_polymerization_dGTP_repair",
        "DNA_polymerization_dTTP_repair",
        "DNA_RM_EcoD_Methylation",
        "DNA_RM_EcoD_Restriction",
        "DNA_RM_MunI_Methylation",
        "DNA_RM_MunI_Restriction",
        "dRiboseP_lyase",
        "HR_DNAResection_dAMP",
        "HR_DNAResection_dCMP",
        "HR_DNAResection_dGMP",
        "HR_DNAResection_dTMP",
        "HR_junctionMigration",
        "HR_junctionResolution",
        "HR_strandExchange",
        "MutM_FAPyAD",
        "MutM_FAPyGN",
        "MutM_oxo8AD",
        "MutM_oxo8GN",
        "NER_DNAExcision",
        "NER_DNAIncision",
        "Ung_ho5URA",
        "Ung_URA"
      ],
      "wid": "Process_DNARepair",
      "name": "DNA repair",
      "parameters": [
        "Parameter_0048",
        "Parameter_0049",
        "Parameter_0050",
        "Parameter_0051",
        "Parameter_0052",
        "Parameter_0053",
        "Parameter_0054",
        "Parameter_0055",
        "Parameter_0056",
        "Parameter_0057",
        "Parameter_0058",
        "Parameter_0059",
        "Parameter_0060",
        "Parameter_0061",
        "Parameter_0062"
      ],
      "cross_references": [],
      "initialization_order": "13",
      "comments": "Introduction\nDNA can be damaged by many modes including hydrolysis, oxidation, and non-enzymatic methylation. The breadth and relative frequency of DNA damage modes was reviewed by Lindahl and Barnes [PUB_0462]. These damages are deleterious to many processes including transcription and replication, and thus are repaired by three pathways – base excision repair, nucleotide excision repair, and homologous recombination. \n\nBase excision repair is most closely associated with oxidative damage, and involves four steps: (1) 3' phosphodiester bond cleavage by a glycosylase, (2) 5' phosphodiester bond cleave by an AP endonuclease, (3) polymerization of a new base by DNA polymerase, and (4) ligation by DNA ligase. \n\nThe nucleotide excision repair recognizes a wider range of DNA damage modes than base excision repair including damage caused by UV radiation and nitric oxide. Nucleotide excision repair involves five steps: (1) recognition of a segment of 12-13 nucleotides surrounding the damaged base by the UvrABC excinuclease, (2) cleavage of the 3' and 5' phosphodiester bonds of the damaged segment, (3) removal of the damage nucleotides by a 3'-5' helicase, (4) polymerization of new nucleotides by DNA polymerase, and (5) ligation by DNA ligase. \n\nHomologous recombination repairs double strand breaks caused by ionizing radiation and stalled replication forks. Homologous recombination occurs by three steps: (1) single-stranded binding (SSB) proteins binds single-stranded DNA, (2) SSBs recruit the protein recA which displaces the SSBs, and (3) RecA aligns homologous DNA strands, and executes strand exchange and migration with the RecU and RuvAB proteins.\n\nEach DNA damage mode is modeled as a Poisson process with a rate parameter equal to its experimentally measured rate. The three modes of DNA repair are modeled motivated by mass-action kinetics similar to RNA and protein maturation.\n\nSimulates repair of a spectrum of DNA lesions by the direct damage repair (DDR), base excision (BER), nucleotide excision (NER), and homologous recombination (HR) DNA repair pathways. The table below summarizes the pathways of DNA repair modelled here.\n\n\n\n\n\tDamage\n\tRepair Pathway\n\n\n\n\n\tAbasic site\n\tBER\n\n\n\tDamaged base\n\tBER, GG-NER\n\n\n\tIntrastrand crosslink\n\tGG-NER\n\n\n\tSingle strand break\n\tDDR\n\n\n\tDouble strand break\n\tHR-DSBR\n\n\n\n\nThis module also simulates DNA damage recognition by the DNA integrity scanning protein DisA (MG_105).\n\nDirect Damage Reversal (DDR)\nThe only direct damage repair homolog identified in M. genitalium is ligase ligA (MG_254). LigA is capable of repairing single strand breaks by a NAD-dependent mechanism:\n\n\n      base    O   base    O           base    O   base    O\n       |     ||    |     ||            |      ||   |     ||\n...-O-sugar-O-P-O-sugar-O-P-O-  +  HO-sugar-O-P-O-sugar-O-P...  + NAD\n              |           |                   |           |\n              O           O                   O           O\n\n                                 ||\n                                 ||\n                                 V\n \n      base    O    base   O   base    O   base   O\n       |     ||    |     ||    |     ||    |    ||\n...-O-sugar-O-P-O-sugar-O-P-O-sugar-O-P-O-sugar-O-P...  + AMP + NMN + H\n              |           |           |           |\n              O           O           O           O\n\n\nBase Excision Repair (BER)\nRepairs specific spontaneously and endogenously produced DNA damaged including base modifications, abasic sites, and single strand breaks by the following mechanism [PUB_0084]:\n\nBase excision by Fpg (MG_498) or Ung (MG_097) glycosylase\n\n      base    O                 OH      O\n       |     ||                  |     ||\n   -O-sugar-O-P... + H2O ==> -O-sugar-O-P  +  base\n              |                         | \n              O                         O\n\n\n\n\t\n\t\n\t\t\n\t\t3'-AP lyase Fpg (MG_498)\n\t\t5'-deoxyribosephosphodiesterase Nfo (MG_235)\n\t\t\n\t\t\t\n\t\n\t\t\n\t\t5'-AP endonuclease Nfo (MG_235)\n\t\t3'-(deoxyribose-5'-phosphate) lyase DnaN (MG_001)\n\t\t\n\t\n\t\n\n5'-3' Polymerization by DnaN (MG_001)\nLigation by LigA (MG_254). See DDR section for details.\nCatabolism and export of damaged nucleobases and nucleosides by metabolic module.\n\n\nFlap endonuclease fen1 homologs have not been identified in M. genitalium; MG_262 is a weak fen1 homolog, but is more strongly homologous to polI exonucleases. Consequently, we do not model flap base excision repair.\n\nGlobal Genomic (GGR) Nucleotide Excision Repair (NER)\nNER recognizes bulky distortions in the shape of the DNA helix caused by damaged bases and cross links [PUB_0084]. Consequently, NER has broader repair capability than base excision repair [PUB_0084]. Here we model only global genomic NER. In some bacteria such as E. coli DNA damage is sensed by RNA polymerase and coupled to the NER machinery by the transcription-repair coupling factor Mfd.\n\n\nUvrABC (MG_073, MG_206, MG_421) cleaves DNA 3' and 5' to lesion\nHelicase PcrA (MG_244) excises 12-13 bases between DNA cleavages [PUB_0084]\nCleavage excised oligonucleotide by MgpA (MG_190)\n5'-3' Polymerization by DnaN (MG_001)\nLigation by LigA (MG_254). See DDR section for details.\nCatabolism and export of damaged nucleobases and nucleosides by metabolic module.\n\n\nNote steps (3) and (4-5) occur in parallel.\n\nHomologous Recombination (HR) Double Strand Break Repair (DSBR)\nHomologous recombination repairs double strand breaks caused by ionizing radiation, stalled replication forks, and β-elimination of abasic sites [PUB_0084]. M. genitalium has a very reduced complement of recombination repair proteins. Normally recombination repair involves the following steps [PUB_0084]:\n\nInitiation: 5'-3' exonuclease removes dNMPs from 5' ends of strands leaving 3' overhangs. Daley and Wilson have shown homologous recombination is most efficient with overhangs of at least 8 bases [PUB_0526]. No tradiational initiation gene has been identified in M. genitalium. 5'-3' resection could be carried out by PcrA (MG_244) or PolI-like (MG_262). Here we model PcrA as the NER helicase, and therefore choose to model PolI-like as the HR initiator.\nStrand exchange: One of the damaged 3' overhang invades the undamaged homologous chromosome, forming a holliday junction. Catalyzed by RecA (MG_339)\n5'-3' Polymerization by DnaN (MG_001) \n2 ligations by LigA (MG_254). See DDR section for details.\nSecond strand exchange: The second damaged 3' overhang invades the undamaged homologous chromosome, forming a second holliday junction. Also catalyzed by RecA (MG_339)\nHolliday junction migration: RuvAB (MG_358, MG_359) widens distance between the two strand cross over points by moving holliday junctions to preferred sequence 5'-(A/T)TT?(G/C)-3' [PUB_0532].\nResolution: RecU (MG_352) dimer nicks DNA at cross over points creating four single strand breaks\n4 ligations by LigA (MG_254). See DDR section for details.\nCatabolism and export of damaged nucleobases and nucleosides by metabolic module.\n\n\nDNA integrity scanning protein DisA\nIn B. subtilis DisA recognizes strand breaks, base damage, and cross links (possibly through ssDNA, Holliday junctions, or stalled replication forks that are generated during recombination repair of these lesions), binds damaged DNA, and via an unknown mechanism delays sporulation. In addition DisA has diadenylate cyclization (produces c-di-AMP from 2 ATPs) activity which is abolished when bound to branched DNA such as Holliday junctions. c-di-AMP has been speculated as the second messenger which couples DisA damage recognition to regulation of the transcriptional regulator Spo0A, and delayed sporulation. The rest of the B. subtilis signaling system (spo0A, kinA, kinE) is not present in M. genitalium.\n\nDNA Restriction/Modification\nOrganisms employ a restriction/modification systems to distinguish self from foreign DNA such as that of bacteriophages [PUB_0652, PUB_0653]. These systems methylate hemi-methylated DNA and cleave unmethylated DNA. The systems maintains self DNA in the fully methylated state so that it can be distinguished from foreign DNA (which will be unmethylated) on methylation status.\n\nM. genitalium contains a reduced restriction/modification system consisting of the EcoD type I DNA recognition subunit (MG_438) and the MunI type II methylatase (MG_184). M. genitalium does not contain a type III RM system.\n\nEcoD is the DNA binding (S) domain of a multimetric (M2R2S1) methylation and restriction complex. EcoD recognizes the sequence 5'-TCARTTC-3'. The other subunits (M) methylate the N(7) position of A-3, producing N(7)-methyladenine or (R) cleave DNA at this position. M. genitalium contains only the DNA recognition subunit.\n\nMunI methylase (MG_184) methylates the N(6) position of A-3 in the sequence 5'-CAATTG-3', producing N(6)-methyladenine. M. genitalium does not contain a MunI endonuclease.\n\nDNA repair mechanisms not present in M. genitalium\n\nTranscription-coupled NER (TC-NER) – M. genitalium does not have a transcription-repair coupling factor mfd homolog.\nAdditional eukaryotic homologous recombination (HR) pathways\n\t\n\tSynthesis-dependent strand annealing (SDSA)\n\tSingle-strand annealing (SSA)\n\tBreak-induced replication (BIR)\n\t\nNon-homologous end joining (NHEJ) – M. genitalium does not have a dedicated NHEJ DNA ligase ligD or a DNA-end-binding protein Ku.\nMismatch Repair\nSOS Response\n\n\nMetabolism of damaged nucleo-bases, -sides, and -tides\nNo gene has been identified which cleaves DNA oligonucleotides; possible genes include pcrA (MG_244), mgpA (MG_190), and polI-like (MG_262). Here we model PcrA as the NER helicase and PolI-like as the HR resection enzyme, leaving MgpA without an assigned function. Therefore we choose to model MgpA as capable of cleaving oligonucleotides released by NER into single nucleotides.\n\nNucleotides released by PolI-like or MgpA are returned to the cytoplasmic free pool, and are available to the metabolism module. Damaged nucleotides are degraded to nucleosides and are exported by the metabolism module. Damaged nucleobases are also exported by the metabolism module.\n\nReferences\n\nB.A. Sokhansanj, G.R. Rodrigue, J.P. Fitch and D.M. Wilson III (2002). A quantitative model of human DNA base excision repair: I. Mechanistic insights. Nuc Acids Res. 30(8): 1817-25. [PUB_0488]\nSokhansanj BA, Wilson DM 3rd (2004). Oxidative DNA damage background estimated by a system model of base excision repair. Free Radic Biol Med. 37(3): 422-7. [PUB_0487]\nPoliti A, Moné MJ, Houtsmuller AB, Hoogstraten D, Vermeulen W, Heinrich R, van Driel R (2005). Mathematical modeling of nucleotide excision repair reveals efficiency of sequential assembly strategies. Mol Cell. 19(5): 679-90. [PUB_0514]\nAlain Blanchard, Glenn Browning (2005). Mycoplasmas: molecular biology, pathogenicity and strategies for control. CRC Press. [PUB_0525]\nCarvalho FM, Fonseca MM, Batistuzzo De Medeiros S, Scortecci KC, Blaha CA, Agnez-Lima LF (2005). DNA repair in reduced genome: The Mycoplasma model. Gene. 360(2): 111-9. [PUB_0072]\nJames M. Daley and Thomas E. Wilson (2005). Rejoining of DNA Double-Strand Breaks as a Function of Overhang Length. Mol Cell Biol. 25(3): 896-906. [PUB_0526]\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0072",
        "PUB_0084",
        "PUB_0462",
        "PUB_0487",
        "PUB_0488",
        "PUB_0514",
        "PUB_0525",
        "PUB_0526",
        "PUB_0532",
        "PUB_0652",
        "PUB_0653"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "ATPHs_DNASupercoiling_gyrase",
        "ATPHs_DNASupercoiling_topoisomeraseI",
        "ATPHs_DNASupercoiling_topoisomeraseIV"
      ],
      "wid": "Process_DNASupercoiling",
      "name": "DNA supercoiling",
      "parameters": [
        "Parameter_0063",
        "Parameter_0064",
        "Parameter_0065",
        "Parameter_0066",
        "Parameter_0067",
        "Parameter_0068",
        "Parameter_0069",
        "Parameter_0070",
        "Parameter_0071",
        "Parameter_0072",
        "Parameter_0073",
        "Parameter_0074",
        "Parameter_0075",
        "Parameter_0076",
        "Parameter_0077",
        "Parameter_0078",
        "Parameter_0079",
        "Parameter_0080",
        "Parameter_0081",
        "Parameter_0082",
        "Parameter_0083",
        "Parameter_0146",
        "Parameter_0147"
      ],
      "cross_references": [],
      "initialization_order": "11",
      "comments": "Supercoiling: Gyrase, TopoI, TopoIV\nWe use a calculation of the DNA's linking number (LK) in order to track the supercoiling of the DNA.  The ΔLK is the difference between the  current level of DNA supercoiling and the relaxed level of DNA  supercoiling. The LKrelaxed is defined as # of base pairs/10.5, in which 10.5 is the number of bases per turn in a relaxed double helix. As the replication loops move, the LKcurrent deviates from this relaxed state, and gyrases and topoisomerases help bring the DNA back to the relaxed state. We model two regimes on the chromosome and track their ΔLKs separately. Unreplicated DNA is that downstream of the two replication loops. As the replication loop progresses the number of bases in this regime decreases, meaning that the LKrelaxed decreases. The LKcurrent then, is too high, and must be brought down towards the LKrelaxed by inducing negative supercoils with DNA gyrase and topoisomerase IV. The second regime is the replicated DNA upstream of the replication loops. As new uncoiled DNA is formed, it needs to be positively supercoiled. The number of bases in this regime is increasing, meaning that the LKrelaxed is increasing. As the LKcurrent relative to the LKrelaxed is too low, positive supercoils are induced by topoisomerase I.\n\nDNA Condensation: SMC\nChromosome segregation requires that the DNA be highly compacted. Structural maintenance of chromosome (SMC) complexes are V shaped proteins (with an head and two legs) that induce positive supercoils in double stranded DNA (Porter et al., 2004). The complexes are believed to work with a lock and key mechanism in which first DNA is looped around the legs of the SMC complex, and then an ATP is bound between the two tails to lock the SMC complex in place. The complexes bind and clamp the DNA causing many loops in the DNA and compacting it. The loops around each leg occupy 90bp. A loop of about 450bp forms between the two SMC complex legs (Jensen and Shapiro, 2003, Strick and Kawaguchi, 2004). Further, it has been inferred that there is about 1 SMC complex per every 7000bp (Jensen and Shapiro, 2003). In our model, SMC complex binding is included in the supercoiling module. The initial chromosome is bound by SMC complexes averaging 7000bp spacing. As the replication loop proceeds, the SMC complexes that it encounters are displaced.  Once the DNA has been replicated, SMC complexes are randomly bound to the DNA such that their spacing averages 7000bp. Each SMC complex occupies 630bp, and no two SMC complexes can occupy the same space. Both the decision of whether an SMC complex will bind at a given time point and the binding location are random. SMC complexes do not fall off the chromosomes unless due to the force of the replication loop. The two chromosomes are tracked separately.\n\nReferences\n\nUllsperger, C., Cozzarelli, N.R. (1996). Contrasting enzymatic activities of topoisomerase IV and DnA gyrase from Escherichia coli. Journal of Bio Chem 271: 31549-31555.\nDekker, N.H., Viard, T., Bouthier de la Tour, C., Duguet, M., Bensimon, D., Croquette, V. (2003). Thermophilic Topoisomerase I on a single DNA molecule. Journal of molecular biology 329: 271-282.\nGore, J., Bryant, Z., Stone, M.D., Nollmann, M., Cozzarelli, N.R., Bustamante, C. (2006). Mechanochemical analysis of DNA gyrase using rotor bead tracking. Nature 439: 100-104.\nBates, A. (2006). DNA Topoisomerases: Single Gyrase Caught in the Act. Current Biology 16: 204-206.\nJensen, R.B, Shapiro, L. (2003). Cell-Cycle-Regulated Expression and Subcellular Localization of the Caulobacter crescentus SMC Chromosome Structural Protein. Journal of Bacteriology 185: 3068-3075.\nStrick, T.R., Kawaguchi, T. (2004). Real-time detection of single-molecule DNA compaction by condensing I. Current biology 14: 874-880.\nTadesse, S., Mascarenhas, J., Kosters, B., Hasilik, A., Graumann, P.L. (2005). Genetic interaction of the SMC complex with topoisomerase IV in Bacillus subtilis. Microbiology 151: 3729-3737.\nBloom, K., Joglekar, A. (2010). Towards building a chromosome segregation machine. Nature 463: 446-456.\nPorter, I.M., Khoudoli, G.A., Swedlow, J.R. (2004). Chromosome condensation: DNA compaction in real time. Current Biology 14: 554-556.\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "FtsZ_activation",
        "FtsZ_deactivation",
        "FtsZ_nucleation",
        "FtsZ_polymerization_3mer",
        "FtsZ_polymerization_4mer",
        "FtsZ_polymerization_5mer",
        "FtsZ_polymerization_6mer",
        "FtsZ_polymerization_7mer",
        "FtsZ_polymerization_8mer",
        "FtsZ_polymerization_9mer"
      ],
      "wid": "Process_FtsZPolymerization",
      "name": "FtsZ Polymerization",
      "parameters": [
        "Parameter_0084",
        "Parameter_0085",
        "Parameter_0086",
        "Parameter_0087",
        "Parameter_0088",
        "Parameter_0089",
        "Parameter_0090",
        "Parameter_0091"
      ],
      "cross_references": [],
      "initialization_order": "4",
      "comments": "FtsZ can exist in one of multiple states: inactivated monomer, activated monomer (GTP bound), nucleated (dimer of two activated FtsZ molecules), elongated polymer of three or more GTP bound FtsZ molecules.\n\nThe FtsZ molecules can move to states of higher and lower polymerization at rates obtained from Chen et al., 2005 and Surovtsev et al. 2008.\n\nThe maximum polymer length is a fittable parameter.\n\nFtsZ polymerization is modeled using a set of differential equations modified from that described in Surovtsev et al. 2008, involving the activation, nucleation, and elongation of FtsZ polymers.  The main modifications were that the equations were simplified to not include annealing and cyclization of ftsZ polymers.\n\nThis results in a distribution of filament lengths at each time step. Our simple model of cytokinesis takes in filaments of only 1 single length. Therefore, as an approximation, we assume that all FtsZ molecules in a polymer state of greater than or equal to 3 monomers can participate in the FtsZ ring. Using the total number of polymerized monomers, we determine the maximum number of full length filaments that can be formed.\n\nReferences\n\nSurovtsev, I.V., Morgan, J.J., Lindahl, P.A. (2008). Kinetic Modelling of the Assembly, Dynamic Steady State, and Contraction of the FtsZ Ring in Prokaryotic Cytokinesis. Plos CB 4: 1-19.\nChen, Y., Bjornson, K., Redick, S.D., Erickson, H.P. (2005). A rapid fluorescence assay for ftsZ assembly indicates cooperative assembly with a dimer nucleus. Biophysical journal 88: 505-514.\nLi, Z., Trimble, M.J., Brun, Y.V., Jensen, G.J. (2007). The structure of FtsZ filaments in vivo suggests a force-generating role in cell division. EMBO 26: 4694-4708.\nAnderson, D.E., Gueiros-Filho, F.J., Erickson, H.P. (2004). Assembly Dynamics of FtsZ Rings in Bacillus subtilis and Escherichia coli and Effects of FtsZ-Regulating Proteins. Journal of Bacteriology 186: 5775-5781.\n",
      "formed_complexes": [
        "MG_224_2MER_GTP",
        "MG_224_3MER_GTP",
        "MG_224_4MER_GTP",
        "MG_224_5MER_GTP",
        "MG_224_6MER_GTP",
        "MG_224_7MER_GTP",
        "MG_224_8MER_GTP",
        "MG_224_9MER_GDP",
        "MG_224_9MER_GTP",
        "MG_224_MONOMER_GDP",
        "MG_224_MONOMER_GTP"
      ],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [],
      "wid": "Process_HostInteraction",
      "name": "Host interaction",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "28",
      "comments": "",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [],
      "wid": "Process_MacromolecularComplexation",
      "name": "Macromolecular complexation",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "2",
      "comments": "The last step in the synthesis of functional enzymes is the stochiometric formation of 155 macromolecular complexes. Macromolecular complexation is kinetically fast, and energetically favorable. Consequently, the model assumes that complexation is limited only by subunit availability, and proceeds to completion rapidly. In addition, we assume that each complex forms with the same specific rate. First, we use mass-action kinetics to compute the relative formation rate of each complex. Second we stochastically form complexes according the computed formation rates. This is repeated until no further complexes can form.\n\nForms macromolecular complexes are formed assuming\n\nComplexation is highly energetically favorable and\nComplexation is fast, and thus\nMacromolecular complexes are formed to completion; that is until there are insufficient free monomers to form additional complexes.\n\n\nComplexes are formed according to Monte Carlo simulation for each independent protein complex network. Outside this function the complete protein complex network is broken up into smaller networks\nwhich share nxsDNA complexes or monomers (edu.stanford.covertlab.util.ComputationUtil.findNonInteractingRowsAndColumns).\n\nThe rate of building each complex is motivated by collision theory, and is equal to the product of the concentration of all monomers raised to the power of their stoichiometries within the complex. These rates are then normalized and used to select the next complex to form.\n\nTypical Thermodynamics\n\nTypical k=105-106 M-1s-1 [PUB_0612]\nk>109 have been measured [PUB_0612]\nkD=10-14 1/s\nΔGbind=ΔGpositional + ΔGintegration [PUB_0613]\nΔGpositional=15 kcal/mol [PUB_0613]\nΔGintegration=-17 kcal/mol [PUB_0613]\n",
      "formed_complexes": [
        "DNA_GYRASE",
        "DNA_POLYMERASE_CORE",
        "DNA_POLYMERASE_GAMMA_COMPLEX",
        "MG_0001_048",
        "MG_0003_465",
        "MG_005_DIMER",
        "MG_006_DIMER",
        "MG_008_379_TETRAMER",
        "MG_013_DIMER",
        "MG_014_015_DIMER",
        "MG_019_DIMER",
        "MG_021_DIMER",
        "MG_023_DIMER",
        "MG_029_DIMER",
        "MG_030_TRIMER",
        "MG_033_TETRAMER",
        "MG_034_DIMER",
        "MG_035_DIMER",
        "MG_036_DIMER",
        "MG_038_TETRAMER",
        "MG_039_DIMER",
        "MG_040_119_120_121_PENTAMER",
        "MG_041_062_429_PENTAMER",
        "MG_041_069_429_PENTAMER",
        "MG_042_043_044_045_PENTAMER",
        "MG_046_DIMER",
        "MG_047_TETRAMER",
        "MG_049_HEXAMER",
        "MG_051_DIMER",
        "MG_052_DIMER",
        "MG_053_TRIMER",
        "MG_055_170_277_464_476_20MER",
        "MG_058_HEXAMER",
        "MG_063_DIMER",
        "MG_064_065_TETRAMER",
        "MG_066_DIMER",
        "MG_072_DIMER",
        "MG_073_206_421_TETRAMER",
        "MG_077_078_079_080_321_PENTAMER",
        "MG_084_TETRAMER",
        "MG_085_HEXAMER",
        "MG_089_DIMER",
        "MG_091_TETRAMER",
        "MG_094_HEXAMER",
        "MG_098_099_100_TRIMER",
        "MG_102_DIMER",
        "MG_105_OCTAMER",
        "MG_106_DIMER",
        "MG_107_DIMER",
        "MG_109_DIMER",
        "MG_111_DIMER",
        "MG_112_DIMER",
        "MG_113_DIMER",
        "MG_114_DIMER",
        "MG_118_DIMER",
        "MG_123_DIMER",
        "MG_126_DIMER",
        "MG_128_HEXAMER",
        "MG_132_DIMER",
        "MG_136_DIMER",
        "MG_137_DIMER",
        "MG_139_DIMER",
        "MG_179_180_181_TETRAMER",
        "MG_182_DIMER",
        "MG_184_DIMER",
        "MG_186_187_188_189_PENTAMER",
        "MG_194_195_TETRAMER",
        "MG_201_DIMER",
        "MG_203_204_TETRAMER",
        "MG_205_DIMER",
        "MG_208_DIMER",
        "MG_213_214_298_6MER",
        "MG_215_TETRAMER",
        "MG_216_TETRAMER",
        "MG_221_OCTAMER",
        "MG_225_DIMER",
        "MG_226_DIMER",
        "MG_227_DIMER",
        "MG_228_TETRAMER",
        "MG_229_231_TETRAMER",
        "MG_239_HEXAMER",
        "MG_240_HEXAMER",
        "MG_244_DIMER",
        "MG_251_DIMER",
        "MG_252_DIMER",
        "MG_259_TETRAMER",
        "MG_265_DIMER",
        "MG_271_272_273_274_192MER",
        "MG_275_TETRAMER",
        "MG_276_DIMER",
        "MG_278_DIMER",
        "MG_283_DIMER",
        "MG_289_290_291_PENTAMER",
        "MG_292_TETRAMER",
        "MG_293_DIMER",
        "MG_299_DIMER",
        "MG_301_TETRAMER",
        "MG_302_303_304_TETRAMER",
        "MG_316_DIMER",
        "MG_322_323_TETRAMER",
        "MG_333_DIMER",
        "MG_336_DIMER",
        "MG_346_DIMER",
        "MG_347_DIMER",
        "MG_349_HEXAMER",
        "MG_351_HEXAMER",
        "MG_352_DIMER",
        "MG_353_DIMER",
        "MG_355_HEXAMER",
        "MG_357_DIMER",
        "MG_358_359_10MER",
        "MG_367_DIMER",
        "MG_368_DIMER",
        "MG_369_DIMER",
        "MG_372_DIMER",
        "MG_375_DIMER",
        "MG_376_HEXAMER",
        "MG_382_TETRAMER",
        "MG_383_DIMER",
        "MG_385_DIMER",
        "MG_390_DIMER",
        "MG_391_HEXAMER",
        "MG_392_393_21MER",
        "MG_394_TETRAMER",
        "MG_396_DIMER",
        "MG_398_399_400_401_402_403_404_405_22MER",
        "MG_407_DIMER",
        "MG_409_DIMER",
        "MG_410_411_412_PENTAMER",
        "MG_425_DIMER",
        "MG_427_DIMER",
        "MG_428_DIMER",
        "MG_431_DIMER",
        "MG_433_DIMER",
        "MG_434_HEXAMER",
        "MG_437_DIMER",
        "MG_445_DIMER",
        "MG_451_DIMER",
        "MG_453_TETRAMER",
        "MG_454_DIMER",
        "MG_455_DIMER",
        "MG_457_HEXAMER",
        "MG_458_TETRAMER",
        "MG_460_TETRAMER",
        "MG_467_468_526_TETRAMER",
        "MG_482_DIMER",
        "RNA_POLYMERASE"
      ],
      "synonyms": [],
      "references": [
        "PUB_0612",
        "PUB_0613"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:13:59",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "Aas1",
        "Aas2",
        "Aas3",
        "Aas4",
        "Aas5",
        "Aas6",
        "Aas7",
        "AceE",
        "AckA",
        "AcpS",
        "Adi",
        "Adk1",
        "Adk2",
        "Adk3",
        "Adk4",
        "AHCYSs",
        "Apt",
        "Apts_Ala",
        "Apts_Arg",
        "Apts_Asn",
        "Apts_Asp",
        "Apts_Cys",
        "Apts_Gln",
        "Apts_Glu",
        "Apts_Gly",
        "Apts_His",
        "Apts_Ile",
        "Apts_Leu",
        "Apts_Lys",
        "Apts_Met",
        "Apts_Phe",
        "Apts_Pro",
        "Apts_Ser",
        "Apts_Thr",
        "Apts_Trp",
        "Apts_Tyr",
        "Apts_Val",
        "ArcC",
        "ArgF",
        "AspC1",
        "AspC2",
        "AspC3",
        "AtpA",
        "AzoR",
        "BPNT",
        "Cdd1",
        "Cdd2",
        "CdsA1",
        "CdsA2",
        "CdsA3",
        "CdsA4",
        "CdsA5",
        "CdsA6",
        "CdsA7",
        "CholK",
        "Cls1",
        "Cls2",
        "Cls3",
        "CmkA1",
        "CmkA2",
        "CmkB3",
        "CoaE",
        "CpdB1",
        "CpdB2",
        "CpdB3",
        "CpdB4",
        "CpsG",
        "CsdA",
        "Dak1",
        "DcdK",
        "Dck",
        "DeoC",
        "DeoD1",
        "DeoD2",
        "DeoD3",
        "DeoD4",
        "DeoD5",
        "DeoD6",
        "DeoD7",
        "DeoD8",
        "Dgk1",
        "DhaK",
        "DhfR1",
        "diadenylate_cyclase",
        "Eno",
        "Fba",
        "FMETHs",
        "FolD1",
        "FolD2",
        "Fre1",
        "Fre2",
        "Fre3",
        "Fre4",
        "Fre5",
        "Fre6",
        "FruK1",
        "FruK2",
        "FthC",
        "FTHFS",
        "GalE",
        "GalU1",
        "GapA",
        "Glf",
        "GLNHs",
        "GlpK",
        "GlpQ1",
        "GlpQ2",
        "GlpQ3",
        "GlpQ4",
        "GlpQ5",
        "GlyA1",
        "GlyA2",
        "GlyA3",
        "GlyA4",
        "glycosyltransferase_Ceramide16_GalCer16",
        "glycosyltransferase_Ceramide16_GlcCer16",
        "glycosyltransferase_DAG160_GalDAG160",
        "glycosyltransferase_DAG160_GlcDAG160",
        "glycosyltransferase_DAG161_GalDAG161",
        "glycosyltransferase_DAG161_GlcDAG161",
        "glycosyltransferase_DAG181_GalDAG181",
        "glycosyltransferase_DAG181_GlcDAG181",
        "glycosyltransferase_GalCer16_GalGalCer16",
        "glycosyltransferase_GalCer16_GlcGalCer16",
        "glycosyltransferase_GalDAG160_GalGalDAG160",
        "glycosyltransferase_GalDAG160_GlcGalDAG160",
        "glycosyltransferase_GalDAG161_GalGalDAG161",
        "glycosyltransferase_GalDAG161_GlcGalDAG161",
        "glycosyltransferase_GalDAG181_GalGalDAG181",
        "glycosyltransferase_GalDAG181_GlcGalDAG181",
        "glycosyltransferase_GalGalDAG160_GalGalGalDAG160",
        "glycosyltransferase_GalGalDAG160_GlcGalGalDAG160",
        "glycosyltransferase_GalGalDAG161_GalGalGalDAG161",
        "glycosyltransferase_GalGalDAG161_GlcGalGalDAG161",
        "glycosyltransferase_GalGalDAG181_GalGalGalDAG181",
        "glycosyltransferase_GalGalDAG181_GlcGalGalDAG181",
        "glycosyltransferase_GalGlcCer16_GalGalGlcCer16",
        "glycosyltransferase_GalGlcDAG160_GalGalGlcDAG160",
        "glycosyltransferase_GalGlcDAG160_GlcGalGlcDAG160",
        "glycosyltransferase_GalGlcDAG161_GalGalGlcDAG161",
        "glycosyltransferase_GalGlcDAG161_GlcGalGlcDAG161",
        "glycosyltransferase_GalGlcDAG181_GalGalGlcDAG181",
        "glycosyltransferase_GalGlcDAG181_GlcGalGlcDAG181",
        "glycosyltransferase_GlcCer16_GalGlcCer16",
        "glycosyltransferase_GlcDAG160_GalGlcDAG160",
        "glycosyltransferase_GlcDAG160_GlcGlcDAG160",
        "glycosyltransferase_GlcDAG161_GalGlcDAG161",
        "glycosyltransferase_GlcDAG161_GlcGlcDAG161",
        "glycosyltransferase_GlcDAG181_GalGlcDAG181",
        "glycosyltransferase_GlcDAG181_GlcGlcDAG181",
        "glycosyltransferase_GlcGlcDAG160_GlcGlcGlcDAG160",
        "glycosyltransferase_GlcGlcDAG161_GlcGlcGlcDAG161",
        "glycosyltransferase_GlcGlcDAG181_GlcGlcGlcDAG181",
        "glycosyltransferase_PG160_DAG160",
        "glycosyltransferase_PG161_DAG161",
        "glycosyltransferase_PG181_DAG181",
        "Gmk1",
        "Gmk2",
        "Gmk3",
        "Gmk4",
        "GpmA",
        "GpsA",
        "HCYSMT",
        "HemG",
        "HinT_AMP_Lysine_MG132",
        "HinT_AMP_Mor_MG132",
        "HinT_AMP_NH2_MG132",
        "HinT_GMP_Lysine_MG132",
        "HinT_GMP_Mor_MG132",
        "Hpt1",
        "Hpt2",
        "hydroxyl_radical_generation_1",
        "hydroxyl_radical_generation_2",
        "LdhA",
        "LIPASE_DIBUTYRIN_MG310",
        "LIPASE_DIBUTYRIN_MG327",
        "LIPASE_DIBUTYRIN_MG344",
        "LIPASE_METHYL_OCDCEA_MG310",
        "LIPASE_METHYL_OCDCEA_MG327",
        "LIPASE_METHYL_OCDCEA_MG344",
        "LIPASE_MONOBUTYRIN_MG310",
        "LIPASE_MONOBUTYRIN_MG327",
        "LIPASE_MONOBUTYRIN_MG344",
        "LIPASE_TRIBUTYRIN_MG310",
        "LIPASE_TRIBUTYRIN_MG327",
        "LIPASE_TRIBUTYRIN_MG344",
        "LIPASE_TRILAURIN_MG310",
        "LIPASE_TRILAURIN_MG327",
        "LIPASE_TRILAURIN_MG344",
        "LIPASE_TRIMYRISTIN_MG310",
        "LIPASE_TRIMYRISTIN_MG327",
        "LIPASE_TRIMYRISTIN_MG344",
        "LIPASE_TRIOLEIN_MG310",
        "LIPASE_TRIOLEIN_MG327",
        "LIPASE_TRIOLEIN_MG344",
        "LIPASE_TRIPALMITIN_MG310",
        "LIPASE_TRIPALMITIN_MG327",
        "LIPASE_TRIPALMITIN_MG344",
        "LIPASE_TRISTEARIN_MG310",
        "LIPASE_TRISTEARIN_MG327",
        "LIPASE_TRISTEARIN_MG344",
        "LIPASE_TRI_HDCEA_IN_MG310",
        "LIPASE_TRI_HDCEA_IN_MG327",
        "LIPASE_TRI_HDCEA_IN_MG344",
        "LIPASE_TRI_TTDCEA_IN_MG310",
        "LIPASE_TRI_TTDCEA_IN_MG327",
        "LIPASE_TRI_TTDCEA_IN_MG344",
        "LIPASE_TWEEN80_MG310",
        "LIPASE_TWEEN80_MG327",
        "LIPASE_TWEEN80_MG344",
        "LIPOYLLYSHs",
        "LplA",
        "Mdh",
        "MetF",
        "METHFHYD",
        "MetK",
        "MetS",
        "MG385r1",
        "MG385r2",
        "MG385r3",
        "MG385r4",
        "MG385r5",
        "MOrx",
        "MsrA",
        "MsrB",
        "NADD1",
        "NADD2",
        "NadE",
        "NadK",
        "NADR1",
        "NADR2",
        "NH3eq",
        "NOX",
        "NrdEF_ADP",
        "NrdEF_CDP",
        "NrdEF_GDP",
        "NrdEF_maintenance",
        "NrdEF_UDP",
        "Ohr_CHP",
        "Ohr_H2O2",
        "Ohr_rx",
        "Ohr_tBHP",
        "OsmC_CHP",
        "OsmC_H2O2",
        "OsmC_rx",
        "OsmC_tBHP",
        "PcbX",
        "Pdp1",
        "Pdp2",
        "Pdp3",
        "PfkA1",
        "PfkA2",
        "PfkA3",
        "PfkA4",
        "PfkA5",
        "Pgi",
        "Pgk1",
        "Pgk2",
        "Pgk3",
        "Pgk4",
        "Pgk5",
        "Pgm",
        "PgpA1",
        "PgpA2",
        "PgpA3",
        "PgsA1",
        "PgsA2",
        "PgsA3",
        "PhnW",
        "PhnX",
        "PlsC1",
        "PlsC2",
        "PlsC3",
        "PlsC4",
        "PlsC5",
        "PlsC6",
        "PlsC7",
        "PlsX1",
        "PlsX2",
        "PlsX3",
        "PlsX4",
        "PlsX5",
        "PlsX6",
        "PlsX7",
        "PncB",
        "Ppa",
        "Ppc",
        "PrsA",
        "pSERpp",
        "Pta",
        "pTHRpp",
        "pTYRpp",
        "PYDXK",
        "Pyk_ADP",
        "Pyk_CDP",
        "Pyk_DADP",
        "Pyk_DCDP",
        "Pyk_DGDP",
        "Pyk_DTDP",
        "Pyk_DUDP",
        "Pyk_GDP",
        "Pyk_IDP",
        "Pyk_TDP",
        "Pyk_UDP",
        "RelA1",
        "RelA2",
        "RibF1",
        "RibF2",
        "Rpe",
        "RpiB",
        "SNGLYPOr",
        "TalA",
        "TatD_dAMP",
        "TatD_dCMP",
        "TatD_dGMP",
        "TatD_dTMP",
        "Tdk1",
        "Tdk2",
        "ThiL",
        "ThyA",
        "Tkt1",
        "Tkt2",
        "TMDPK",
        "Tmk",
        "TpiA",
        "TrxB",
        "TXPYDX",
        "TXTHM",
        "TX_ACAL",
        "TX_ACUP",
        "TX_AD",
        "TX_AKG",
        "TX_AROP11",
        "TX_AROP12",
        "TX_AROP13",
        "TX_AROP21",
        "TX_AROP22",
        "TX_AROP23",
        "TX_aza6dT",
        "TX_aza8dA",
        "TX_c5dU",
        "TX_CAP",
        "TX_carbamoylmethyl6dA",
        "TX_Cbi_Co",
        "TX_Cbi_Ni",
        "TX_CL",
        "TX_cmnm5s2U",
        "TX_CO2",
        "TX_COA",
        "TX_ComEC_dApdAp",
        "TX_ComEC_dCpdCp",
        "TX_ComEC_dGpdGp",
        "TX_ComEC_dTpdTp",
        "TX_cyclobutane_dCdC",
        "TX_cyclobutane_dCdT",
        "TX_cyclobutane_dTdC",
        "TX_cyclobutane_dTdT",
        "TX_cyclodA",
        "TX_cyclodG",
        "TX_CYTD",
        "TX_DA",
        "TX_dC64dC",
        "TX_dC64dC_dewar",
        "TX_dC64dT",
        "TX_dC64dT_dewar",
        "TX_dC_GLYC",
        "TX_DDCA",
        "TX_DHdT",
        "TX_DHdU",
        "TX_dhpdU",
        "TX_diacylglycerolCys",
        "TX_dINS",
        "TX_dT64dC",
        "TX_dT64dC_dewar",
        "TX_dT64dT",
        "TX_dT64dT_dewar",
        "TX_dT_GLYC",
        "TX_dXAN",
        "TX_e1dA",
        "TX_e1dG",
        "TX_e3dA",
        "TX_e3dC",
        "TX_e3dG",
        "TX_e3dT",
        "TX_e4dC",
        "TX_e5dC",
        "TX_e6dA",
        "TX_e7dA",
        "TX_e7dG",
        "TX_e8dG",
        "TX_epsilon1N2dG",
        "TX_epsilon1N6dA",
        "TX_epsilon3N4dC",
        "TX_epsilonN23dG",
        "TX_f5dU",
        "TX_FALD",
        "TX_FAPydA",
        "TX_FAPydG",
        "TX_FOR",
        "TX_FRUPTS",
        "TX_GL",
        "TX_GL3P",
        "TX_glchm5dC",
        "TX_glchm5dU",
        "TX_GLCPTS",
        "TX_GLNHPQ",
        "TX_gludT",
        "TX_GLUP",
        "TX_Gm",
        "TX_GN",
        "TX_H2O",
        "TX_H2O2",
        "TX_HDCA",
        "TX_HDCEA",
        "TX_hm3dC",
        "TX_hm5dC",
        "TX_hm5dU",
        "TX_hm5hydantoin_dRibose",
        "TX_ho5dC",
        "TX_ho5dU",
        "TX_ho5ho6dT",
        "TX_ho5ho6dU",
        "TX_ho5hydantoin_dRibose",
        "TX_k2C",
        "TX_LIPOATE",
        "TX_m1dA",
        "TX_m1dG",
        "TX_m1G",
        "TX_m2G",
        "TX_m3dA",
        "TX_m3dC",
        "TX_m3dG",
        "TX_m3dT",
        "TX_m4dC",
        "TX_m5C",
        "TX_m5dC",
        "TX_m62A",
        "TX_m6A",
        "TX_m6dA",
        "TX_m7dA",
        "TX_m7dG",
        "TX_m7G",
        "TX_m8dG",
        "TX_MdlB_doxorubicin",
        "TX_MGTA_CA",
        "TX_MGTA_CU",
        "TX_MGTA_FE2",
        "TX_MGTA_FE3",
        "TX_MGTA_MG",
        "TX_MGTA_MN",
        "TX_MGTA_MOBD",
        "TX_MGTA_ZN",
        "TX_n2dA",
        "TX_NAC",
        "TX_NAUP2",
        "TX_NH4",
        "TX_NormM_acriflavine",
        "TX_NormM_benzalkonium",
        "TX_NormM_berberine",
        "TX_NormM_ciprofloxacin",
        "TX_NormM_crystalViolet",
        "TX_NormM_doxorubicin",
        "TX_NormM_enoxacin",
        "TX_NormM_ethidium",
        "TX_NormM_lomefloxacin",
        "TX_NormM_norfloxacin",
        "TX_NormM_novobiocin",
        "TX_NormM_proflavine",
        "TX_NormM_rhodamine6G",
        "TX_NormM_tetraphenylphosphonium",
        "TX_O2",
        "TX_O2edC",
        "TX_O2edT",
        "TX_O2mdC",
        "TX_O2mdT",
        "TX_O4edT",
        "TX_O4mdT",
        "TX_O6edG",
        "TX_O6mdG",
        "TX_OA",
        "TX_OCDCA",
        "TX_OCDCEA",
        "TX_OppB_Ala",
        "TX_OppB_Arg",
        "TX_OppB_Asn",
        "TX_OppB_Asp",
        "TX_OppB_Cys",
        "TX_OppB_Gln",
        "TX_OppB_Glu",
        "TX_OppB_Gly",
        "TX_OppB_His",
        "TX_OppB_Ile",
        "TX_OppB_Leu",
        "TX_OppB_Lys",
        "TX_OppB_Met",
        "TX_OppB_Phe",
        "TX_OppB_Pro",
        "TX_OppB_Ser",
        "TX_OppB_Thr",
        "TX_OppB_Trp",
        "TX_OppB_Tyr",
        "TX_OppB_Val",
        "TX_oxo2dA",
        "TX_oxo8dA",
        "TX_oxo8dG",
        "TX_oxoethyl7dG",
        "TX_PHNT",
        "TX_PIUP1",
        "TX_PSIURI",
        "TX_putdT",
        "TX_RIBFLV",
        "TX_RIBUP",
        "TX_s2U",
        "TX_s4U",
        "TX_SalX_nisin",
        "TX_SO4",
        "TX_SPMDUP1",
        "TX_SPRDUP2",
        "TX_STEROL",
        "TX_SunT_nisin",
        "TX_THF",
        "TX_THY",
        "TX_TRK",
        "TX_TTDCA",
        "TX_TTDCEA",
        "TX_UHPT1",
        "TX_UHPT2",
        "TX_UHPT3",
        "TX_Um",
        "TX_URA",
        "Udk1",
        "Udk2",
        "Upp",
        "UshA_AMP",
        "UshA_aza6dTMP",
        "UshA_aza8dAMP",
        "UshA_c5dUMP",
        "UshA_carbamoylmethyl6dAMP",
        "UshA_cmnm5s2UMP",
        "UshA_cyclobutane_dCMPdCMP",
        "UshA_cyclobutane_dCMPdTMP",
        "UshA_cyclobutane_dTMPdCMP",
        "UshA_cyclobutane_dTMPdTMP",
        "UshA_cyclodAMP",
        "UshA_cyclodGMP",
        "UshA_dCMP",
        "UshA_dCMP64dCMP",
        "UshA_dCMP64dCMP_dewar",
        "UshA_dCMP64dTMP",
        "UshA_dCMP64dTMP_dewar",
        "UshA_dCMP_GLYC",
        "UshA_DHdTMP",
        "UshA_DHdUMP",
        "UshA_dhpdUMP",
        "UshA_dINSMP",
        "UshA_dTMP",
        "UshA_dTMP64dCMP",
        "UshA_dTMP64dCMP_dewar",
        "UshA_dTMP64dTMP",
        "UshA_dTMP64dTMP_dewar",
        "UshA_dTMP_GLY",
        "UshA_dUMP",
        "UshA_dXANMP",
        "UshA_e1dAMP",
        "UshA_e1dGMP",
        "UshA_e3dAMP",
        "UshA_e3dCMP",
        "UshA_e3dGMP",
        "UshA_e3dTMP",
        "UshA_e4dCMP",
        "UshA_e5dCMP",
        "UshA_e6dAMP",
        "UshA_e7dAMP",
        "UshA_e7dGMP",
        "UshA_e8dGMP",
        "UshA_epsilon1N2dGMP",
        "UshA_epsilon1N6dAMP",
        "UshA_epsilon3N4dCMP",
        "UshA_epsilonN23dGMP",
        "UshA_f5dUMP",
        "UshA_FAPydAMP",
        "UshA_FAPydGMP",
        "UshA_glchm5dCMP",
        "UshA_glchm5dUMP",
        "UshA_gludTMP",
        "UshA_GmMP",
        "UshA_GMP",
        "UshA_hm3dCMP",
        "UshA_hm5dCMP",
        "UshA_hm5dUMP",
        "UshA_hm5hydantoin_dRiboseMP",
        "UshA_ho5dCMP",
        "UshA_ho5dUMP",
        "UshA_ho5ho6dTMP",
        "UshA_ho5ho6dUMP",
        "UshA_ho5hydantoin_dRiboseMP",
        "UshA_IMP",
        "UshA_k2CMP",
        "UshA_m1dAMP",
        "UshA_m1dGMP",
        "UshA_m1GMP",
        "UshA_m2GMP",
        "UshA_m3dAMP",
        "UshA_m3dCMP",
        "UshA_m3dGMP",
        "UshA_m3dTMP",
        "UshA_m4dCMP",
        "UshA_m5CMP",
        "UshA_m5dCMP",
        "UshA_m62AMP",
        "UshA_m6AMP",
        "UshA_m6dAMP",
        "UshA_m7dAMP",
        "UshA_m7dGMP",
        "UshA_m7GMP",
        "UshA_m8dGMP",
        "UshA_n2dAMP",
        "UshA_O2edCMP",
        "UshA_O2edTMP",
        "UshA_O2mdCMP",
        "UshA_O2mdTMP",
        "UshA_O4edTMP",
        "UshA_O4mdTMP",
        "UshA_O6edGMP",
        "UshA_O6mdGMP",
        "UshA_oxo2dAMP",
        "UshA_oxo8dAMP",
        "UshA_oxo8dGMP",
        "UshA_oxoethyl7dGMP",
        "UshA_PSIURIMP",
        "UshA_putdTMP",
        "UshA_s2UMP",
        "UshA_s4UMP",
        "UshA_UmMP",
        "vinyl_chloride_activation_1",
        "vinyl_chloride_activation_2",
        "YbiV_deoxyG6P",
        "YbiV_F6P",
        "YbiV_G6P",
        "YbiV_GL2P",
        "YbiV_MAN6P",
        "YbiV_R5P",
        "YbiV_SBT6P",
        "YbiV_SNGLYP",
        "YicP"
      ],
      "wid": "Process_Metabolism",
      "name": "Metabolism",
      "parameters": [
        "Parameter_0092",
        "Parameter_0093",
        "Parameter_0139",
        "Parameter_0140",
        "Parameter_0149"
      ],
      "cross_references": [],
      "initialization_order": "8",
      "comments": "Transport and metabolism are modeled using the constraint-based method flux-balance analysis (FBA). Briefly, FBA assumes that bacteria have evolved to maximize growth, and poses transport and metabolism as the optimization of cellular building block and energy production subject to available nutrients, and allowed chemical reactions. FBA models are typically constrained by experimentally measured transport and diffusion rates. In addition to these constraints, we constrain constrain our FBA module by our model's predicted enzyme abundances, and by experimentally measured kinetic parameters. These additional constraints yield a more accurate model of transport and metabolism. Furthermore, we use our other modules to obtain a more extensive and accurate metabolic objective than used in earlier FBA models.\n\nFlux-balance analysis\n\nComputes reaction bounds based on \n    \n    enzyme kinetics,\n    enzyme availability\n    specific transport rate\n    metabolite availability\n    \nComputes optimal reaction fluxes which maximize biomass production\nComputes integer-valued production of biomass components\nUpdates amounts of biomass components\n\n\n\n\n\n  Variable\n  Units\n\n\n\n\n  fbaEnzymeBounds\n  molecules/enzyme/s\n\n\n  fbaReactionBounds\n  molecules/(gram dry biomass)/s\n\n\n  metabolites\n  molecules\n\n\n  enzymes\n  molecules\n\n\n  simulationStep\n  s\n\n\n  lowerBounds\n  reactions/s\n\n\n  upperBounds\n  reactions/s\n\n\n  growth\n  cell/s\n\n\n  biomassComposition\n  molecules/cell\n\n\n  metabolismProduction\n  molecules/cell\n\n\n  chamberVolume\n  L\n\n\n  mediaComposition\n  molecules/chamber\n\n\n  growthAssociatedMaintanence\n   \n\n\n",
      "formed_complexes": [
        "MG_102_DIMER_ox",
        "MG_124_MONOMER_ox",
        "MG_127_MONOMER_ox",
        "MG_229_231_TETRAMER_ox",
        "MG_271_272_273_274_192MER_ox",
        "MG_287_MONOMER_ACP",
        "MG_287_MONOMER_ddcaACP",
        "MG_287_MONOMER_hdeACP",
        "MG_287_MONOMER_myrsACP",
        "MG_287_MONOMER_ocdcaACP",
        "MG_287_MONOMER_octeACP",
        "MG_287_MONOMER_palmACP",
        "MG_287_MONOMER_tdeACP",
        "MG_295_MONOMER_ox",
        "MG_427_DIMER_ox",
        "MG_454_DIMER_ox"
      ],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [],
      "wid": "Process_ProteinActivation",
      "name": "Protein activation",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "6",
      "comments": "",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "ProteinDegradation_FtsH_ALA",
        "ProteinDegradation_FtsH_ARG",
        "ProteinDegradation_FtsH_ASN",
        "ProteinDegradation_FtsH_ASP",
        "ProteinDegradation_FtsH_CYS",
        "ProteinDegradation_FtsH_GLN",
        "ProteinDegradation_FtsH_GLU",
        "ProteinDegradation_FtsH_GLY",
        "ProteinDegradation_FtsH_HIS",
        "ProteinDegradation_FtsH_ILE",
        "ProteinDegradation_FtsH_LEU",
        "ProteinDegradation_FtsH_LYS",
        "ProteinDegradation_FtsH_MET",
        "ProteinDegradation_FtsH_PHE",
        "ProteinDegradation_FtsH_PRO",
        "ProteinDegradation_FtsH_SER",
        "ProteinDegradation_FtsH_THR",
        "ProteinDegradation_FtsH_TRP",
        "ProteinDegradation_FtsH_TYR",
        "ProteinDegradation_FtsH_VAL",
        "ProteinDegradation_Lon_ALA",
        "ProteinDegradation_Lon_ARG",
        "ProteinDegradation_Lon_ASN",
        "ProteinDegradation_Lon_ASP",
        "ProteinDegradation_Lon_CYS",
        "ProteinDegradation_Lon_GLN",
        "ProteinDegradation_Lon_GLU",
        "ProteinDegradation_Lon_GLY",
        "ProteinDegradation_Lon_HIS",
        "ProteinDegradation_Lon_ILE",
        "ProteinDegradation_Lon_LEU",
        "ProteinDegradation_Lon_LYS",
        "ProteinDegradation_Lon_MET",
        "ProteinDegradation_Lon_PHE",
        "ProteinDegradation_Lon_PRO",
        "ProteinDegradation_Lon_SER",
        "ProteinDegradation_Lon_THR",
        "ProteinDegradation_Lon_TRP",
        "ProteinDegradation_Lon_TYR",
        "ProteinDegradation_Lon_VAL"
      ],
      "wid": "Process_ProteinDecay",
      "name": "Protein decay",
      "parameters": [
        "Parameter_0094",
        "Parameter_0095",
        "Parameter_0096",
        "Parameter_0097",
        "Parameter_0098",
        "Parameter_0099",
        "Parameter_0100",
        "Parameter_0101"
      ],
      "cross_references": [],
      "initialization_order": "1",
      "comments": "Protein degradation occurs by an enzyme dependent process similar to RNA degradation. First, in an energy-dependent fashion peptides are hydrolytically cleaved into 10-20 amino acid fragments by xsDNA the lon protease, or if the ribosome stalled during the synthesis of the peptide, by the FtsH protease. Second, 8 peptidases together hydrolytically degrade the peptide fragments produced by the lon protease, producing individual amino acids. Protein degradation is modeled as a Poisson process, similar to RNA degradation.\n\nPoisson simulation of protein damage, repair, and decay mediated by \n\nchaperone: clpB chaperone disaggregates proteins by an energy-dependent mechanism\nproteases: lon, ftsH; each is believed to processively cleave peptideas in smaller peptides of approximately 20 amino acids\nftsH: cleaves peptides with tmRNA stalled translation proteolysis tag; parameterized by\n    \n    fragment length (aa)\n    kinetic rate (cleaves/s)\n    energy per cleavage (ATP/cleavage)\n    \nlon: cleaves all other peptides; parameterized by\n    \n    fragment length (aa)\n    kinetic rate (cleaves/s)\n    energy per cleavage (ATP/cleavage)\n    \nseveral peptidases: the specific functions and kinetics of the individual peptidases are unknown and not modelled; decay proceeds as long as at least one of each peptidase is present\n\n\n\nMisfold/aggregate proteins\n    \n    Protein misfolding/aggregatation is modeled as a poisson process with a small rate constant\n    \nFold/disaggregate cytosolic proteins\n    \n    Occurs if clpB is present\n    \nDecay macromolecular complexes\n    \n    Model decay is poisson process with rate paramter given by the inverse weighted average half life of the complex's subunits\n    Salvage bound prosthetic groups\n    Mark subunits as damaged to be degraded by xsDNA the protease/peptidase or ribonuclease machinery\n    \nDecay protein monomers\n    \n    Model selection of monomers that decay as poission process with rate parameters equal to the decay rates (ln(2)/half life as computed by the N-end rule) of the monomers.\n    Execute decay reactions as long as the following are available\n    Lon/FtsH protease for normal / ribosome-stalled peptides\n    Complete peptidase complement\n    Water for hydrolysis of peptide bonds\n    \nSimulate metabolic conversion of transferred amino acids back to precursors:\n    \n    fMet --> Met\n    Gln  --> Glu\n     \n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [],
      "wid": "Process_ProteinFolding",
      "name": "Protein folding",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "5",
      "comments": "For some proteins, protein folding requires prosthetic groups including inorganic ions and/or molecular chaperones. See Note_Cofactors and Note_ProteinChaperones for information about the reconstruction of the specific prosthetic groups and chaperones required for the correct folding of each polypeptide.\n\nThis module simulates:\n\nProsthetic group complexation\n    \n    Inorganic ions: Fe2+, Fe3+, K+, Mg2+, Mn2+, Na+, Zn2+\n    \nProtein folding, where required mediated by ATP-dependent chaperone(s) [PUB_0014, PUB_0644]\n    \n    Trigger factor (Tig, MG_238_MONOMER) – Highly expressed protein which possibly interacts with the L23 subunit of every ribosome, co-translationally assisting in the early folding every protein [PUB_0014, PUB_0644]. Binds vacant ribosomes with half-life of 11 s [PUB_0005]; binds ribosome-peptide complexes with half-life of 15-50 s [PUB_0005]; remains associated with the peptide for a up to more seconds after peptide release from the ribosome [PUB_0005]. Trigger factor-50S ribosome affinity: KD=1 μM [PUB_0005]. We model trigger as required for the proper folding of all proteins.\n    Chaperone (DnaK, MG_305_MONOMER) – Folds 5-18% of proteins [PUB_0014, PUB_0644]. Typically folds proteins > 30 kDa, typically in less than 2 min [PUB_0014, PUB_0644]. Binds backbone of short, linear, unfolded, hydrophobic peptide segments [PUB_0014, PUB_0644].  ATP hydrolysis and peptide release catalyzed by GrpE (MG_201_DIMER) [PUB_0014, PUB_0644]. Regulated by co-chaperone DnaJ (MG_019_DIMER) which interacts with the peptide side chains [PUB_0014, PUB_0644].\n    Chaperonin (GroEL, GroES, MG_392_393_21MER) – Folds 10-15% proteins by ATP-dependent mechanism [PUB_0014, PUB_0644]. Typically folds proteins 20-60 kDa in size [PUB_0014, PUB_0644] with half-life > 10 min [PUB_0014, PUB_0644], 30-60 s [PUB_0389].\n    \n\n\nIn addition to chaperones, membrane protein folding may be assisted by phosphatidyl ethanolamine (PE) and phosphatidyl glycerol (PG) [PUB_0646]. This effect is not currently modeled.",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0005",
        "PUB_0014",
        "PUB_0389",
        "PUB_0644",
        "PUB_0646"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "MG_070_MONOMER_MODIFICATION_001",
        "MG_070_MONOMER_MODIFICATION_002",
        "MG_070_MONOMER_MODIFICATION_003",
        "MG_070_MONOMER_MODIFICATION_004",
        "MG_070_MONOMER_MODIFICATION_005",
        "MG_166_MONOMER_MODIFICATION_001",
        "MG_217_MONOMER_MODIFICATION_001",
        "MG_272_MONOMER_MODIFICATION_001",
        "MG_273_MONOMER_MODIFICATION_001",
        "MG_274_MONOMER_MODIFICATION_001",
        "MG_282_MONOMER_MODIFICATION_001",
        "MG_305_MONOMER_MODIFICATION_001",
        "MG_305_MONOMER_MODIFICATION_002",
        "MG_317_MONOMER_MODIFICATION_001",
        "MG_317_MONOMER_MODIFICATION_002",
        "MG_317_MONOMER_MODIFICATION_003",
        "MG_317_MONOMER_MODIFICATION_004",
        "MG_317_MONOMER_MODIFICATION_005",
        "MG_328_MONOMER_MODIFICATION_001",
        "MG_342_MONOMER_MODIFICATION_001",
        "MG_377_MONOMER_MODIFICATION_001",
        "MG_377_MONOMER_MODIFICATION_002",
        "MG_377_MONOMER_MODIFICATION_003",
        "MG_377_MONOMER_MODIFICATION_004",
        "MG_377_MONOMER_MODIFICATION_005",
        "MG_377_MONOMER_MODIFICATION_006",
        "MG_377_MONOMER_MODIFICATION_007",
        "MG_377_MONOMER_MODIFICATION_008",
        "MG_377_MONOMER_MODIFICATION_009",
        "MG_377_MONOMER_MODIFICATION_010",
        "MG_377_MONOMER_MODIFICATION_011",
        "MG_392_MONOMER_MODIFICATION_001",
        "MG_392_MONOMER_MODIFICATION_002",
        "MG_401_MONOMER_MODIFICATION_001",
        "MG_401_MONOMER_MODIFICATION_002",
        "MG_401_MONOMER_MODIFICATION_003",
        "MG_401_MONOMER_MODIFICATION_004",
        "MG_401_MONOMER_MODIFICATION_005",
        "MG_401_MONOMER_MODIFICATION_006",
        "MG_401_MONOMER_MODIFICATION_007",
        "MG_401_MONOMER_MODIFICATION_008",
        "MG_401_MONOMER_MODIFICATION_009",
        "MG_407_MONOMER_MODIFICATION_001",
        "MG_407_MONOMER_MODIFICATION_002",
        "MG_407_MONOMER_MODIFICATION_003",
        "MG_427_MONOMER_MODIFICATION_001",
        "MG_427_MONOMER_MODIFICATION_002",
        "MG_438_MONOMER_MODIFICATION_001",
        "MG_438_MONOMER_MODIFICATION_002",
        "MG_438_MONOMER_MODIFICATION_003",
        "MG_438_MONOMER_MODIFICATION_004",
        "MG_438_MONOMER_MODIFICATION_005",
        "MG_438_MONOMER_MODIFICATION_006",
        "MG_438_MONOMER_MODIFICATION_007",
        "MG_438_MONOMER_MODIFICATION_008",
        "MG_438_MONOMER_MODIFICATION_009",
        "MG_451_MONOMER_MODIFICATION_001",
        "MG_451_MONOMER_MODIFICATION_002",
        "MG_451_MONOMER_MODIFICATION_003",
        "MG_460_MONOMER_MODIFICATION_001",
        "MG_460_MONOMER_MODIFICATION_002",
        "MG_460_MONOMER_MODIFICATION_003",
        "MG_491_MONOMER_MODIFICATION_001"
      ],
      "wid": "Process_ProteinModification",
      "name": "Protein modification",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "18",
      "comments": "Protein modifications including\n\nAdductions\n    \n    Ser/Thr/Tyr phosphorylation (MG_109_DIMER)\n    lipoate ligation (MG_270_MONOMER)\n    \nLigations\n    \n    C-terminal glutamate ligation (MG_012_MONOMER)\n    \n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "Deformylation",
        "NTerminalMethionineClevage"
      ],
      "wid": "Process_ProteinProcessingI",
      "name": "Protein processing I",
      "parameters": [
        "Parameter_0102",
        "Parameter_0103"
      ],
      "cross_references": [],
      "initialization_order": "19",
      "comments": "Following translation, nascent peptides are deformylated, cleaved, translocated, folded, and modified. First, peptide deformylase deformylates the N-terminal formylmethionine of each nascent peptide. Second, methionine aminopeptidase cleaves the N-terminal methionine of 35 peptides. Second, 117 integral membrane, lipoproteins, and extracellular proteins bind the SecA translocase and are translocated into and through the plasma membrane via the SecYEGDF-YidC pore. Third, diacylglyceryl is transferred to the C-terminal cysteine of the signal sequence of each lipoprotein by diacylglyceryl transferase, and the signal sequence of each lipoprotein is cleaved by signal peptidase II. Next, 85 peptides bind inorganic ions at particular sites and 64 peptides fold with the assistance of the chaperones and chaperonins DnaJ, DnaK, GroEL, GroES, and GrpE. All peptides require trigger factor to properly fold. Finally, 20 peptide species are modified at 63 sites by 3 enzymes – serine/threonine protein kinase, lipoate ligase, and alpha glutamate ligase.\n\nNascent peptide processing, translocation, folding, and modification are modeled motivated by mass-action kinetics similar to RNA cleavage and modification. First, the maximum maturation rate of each species is calculated. Second, maturations are successively randomly selected according to the calculated maximum rates until no further maturations can occur.\n\nIn M. genitalium, every protein requires deformylation and roughly 7% require N-terminal amino acid cleavage. In this model, if both processes are required, they must occur in the same time step, as this module is internally stateless.\n\n\nDeformylation (MG_106)\nN-terminal amino acid cleavage (MG_172)\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "ProLipoproteinDiacylglycerylTransferase"
      ],
      "wid": "Process_ProteinProcessingII",
      "name": "Protein processing II",
      "parameters": [
        "Parameter_0104",
        "Parameter_0105"
      ],
      "cross_references": [],
      "initialization_order": "20",
      "comments": "Simulates maturation of lipoproteins:\n\ndiacylglyceryl transfer &ndash; Lgt (MG_086) catalyzes transfer of diacylglycerol group to sulfhydryl group of lipobox cysteine [PUB_0654]\nsignal peptide cleavage &ndash; LspA (MG_210) cleaves lipoprotein at lipobox cysteine [PUB_0654]\n\n\nNote M. genitalium does contain a apolipoprotein transacylase [PUB_0655, PUB_0656, PUB_0657].\n\nLipoproteins participate in many processes including:\n\nNutrient acquisition\nAdaptation\nProtein maturation\nAdherence\nVirulence\nConjugation\nSporulation\nTransport\nSignal transduction\n\n\nReferences\n\nPUB_0654\nPUB_0655\nPUB_0656\nPUB_0657\nPUB_0658\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0654",
        "PUB_0655",
        "PUB_0656",
        "PUB_0657",
        "PUB_0658"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "ATPHs_ProteinTranslocation_SecA",
        "ATPHs_ProteinTranslocation_SRP"
      ],
      "wid": "Process_ProteinTranslocation",
      "name": "Protein translocation",
      "parameters": [
        "Parameter_0106",
        "Parameter_0107",
        "Parameter_0108"
      ],
      "cross_references": [],
      "initialization_order": "21",
      "comments": "Introduction\nProtein transport systems transport up to 40% of proteins: 10% of B. subtilis proteins are secreted; 25-30% of proteins are membrane localized.\n\nProtein transport systems are classified into multiple types. Each type recognizes a distinct signal peptide, and uses a distinct machinery to transport proteins into and through the membrane. Type I transport systems (eg. TolC) recognize N-terminal sequences, and transport unfolded proteins post-translationally. Type II transport systems (eg. Sec) recognize N-terminal positively charged sequences and transport nascent proteins co-translationally. Type III systems (eg. TAT) recognize C-terminal sequences and transport folded proteins.\n\nM. genitalium possesses only a type II protein transport system. M. genitalium does not contain sortases or foldases.\n\nM. genitalium Type II Sec System\nM. genitalium possesses a type II protein transport system:\n\nSignal recognition particle (SRP) – GTP-bound form competes with trigger factor which recognizes less hydrophobic sequences to binds signal peptides co-translationally. Coordinates nascent peptides to the signal particle receptor. Recognizes a positively charged N-terminal sequence of 10-15 residues. SRP is a ribonucleoprotein consisting of 1 protein subunit (Ffh, MG_048) which contains a GTP binding domain and 1 4.5S RNA (scRNA, ffs, MG_0001)\nSignal recognition particle receptor (SR, FtsY, MG_297) – GTP-bound form binds signal recognition particle, thereby localizing the nascent peptide to the membrane. Hydrolysis of both GTPs bound to the receptor and to Ffh dissociates the peptide-SRP-SR complex, freeing the SRP, and shuttling a peptide-SR complex to the translocase [PUB_0010].\nSecA translocase – Processively translocates the nascent polypeptide through the translocase pore via an ATP-dependent mechanism. SecA translocates 4-5 aa/ATP [PUB_0003] at a rate 270 pmol aa/min [PUB_0001].\nSecYEGDF YjaC translocase pore – Forms a membrane pore through which unfolded proteins pass. Accessory proteins such as YjaC increase the efficiency of transport and are not essential. Integral membrane proteins begin folding by a phosphatidyl ethanolamine-dependent mechanism while translocating through the membrane. Membrane protein complexation occurs after membrane insertion.\nType II signal peptidase – Extracellularly cleaves the signal peptide of lipoproteins at a lipobox (L[ASI][GA]C).\nDiacylglyceryl transferase – Transfers a N-terminal lipid anchor to lipoproteins after cleavage by the type II signal peptidase.\n\n\nNote_ProteinLocalization_SignalPeptides describes the curation of protein signal peptides.\n\nSimulation\n\nTranslocates protein to and through membrane using\n    \n    signal recognition particle\n    signal recognition particle receptor\n    translocase ATPase\n    translocase pore\n    \nCleaves signal peptides of, and transfers diacylglyceryl to lipoproteins using\n    \n    prolipoprotein signal peptidase II\n    diacylgylceryl transferase\n    \n\n\nReferences\n\nRoss E. Dalbey and Gunner von Heijne (2002). Protein targeting, transport, and translocation. Academic Press, San Diego. [PUB_0003]\nJune R. Scott and Timothy C. Barnett (2006). Surface Proteins of Gram-Positive Bacteria and How They Get There. Annu Rev Microbiol. 60: 397-423. [PUB_0626]\nChristos Stathopoulos, Yihfen T. Yen, Casey Tsang and Todd Cameron (2008). Protein Secretion in Bacterial Cells. Bacterial Physiology. Springer Berlin: Heidelberg. [PUB_0627].\nvan Wely KH, Swaving J, Freudl R, Driessen AJ (2001). Translocation of proteins across the cell envelope of Gram-positive bacteria. FEMS Microbiol Rev. 25(4): 437-54.[PUB_0004]\nHutchings MI, Palmer T, Harrington DJ, Sutcliffe IC (2009). Lipoprotein biogenesis in Gram-positive bacteria: knowing when to hold 'em, knowing when to fold 'em. Trends Microbiol. 17(1): 13-21. [PUB_0629]\nBernstein HD (2000). The biogenesis and assembly of bacterial membrane proteins. Curr Opin Microbiol. 3(2): 203-9. [PUB_0635]\nDowhan W, Bogdanov M (2009). Lipid-dependent membrane protein topogenesis. Annu Rev Biochem. 78: 515-40. [PUB_0636]\nXie K, Dalbey RE (2008). Inserting proteins into the bacterial cytoplasmic membrane using the Sec and YidC translocases. Nat Rev Microbiol. 6(3): 234-44. [PUB_0018]\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0001",
        "PUB_0003",
        "PUB_0004",
        "PUB_0010",
        "PUB_0018",
        "PUB_0626",
        "PUB_0627",
        "PUB_0629",
        "PUB_0635",
        "PUB_0636"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "ATPHs_DNAReplication_Helicase",
        "DNALigation",
        "DNAPolymerization_dATP",
        "DNAPolymerization_dCTP",
        "DNAPolymerization_dGTP",
        "DNAPolymerization_dTTP",
        "DNAPrimerPolymerization_ATP",
        "DNAPrimerPolymerization_CTP",
        "DNAPrimerPolymerization_GTP",
        "DNAPrimerPolymerization_UTP"
      ],
      "wid": "Process_Replication",
      "name": "Replication",
      "parameters": [
        "Parameter_0109",
        "Parameter_0110",
        "Parameter_0111",
        "Parameter_0112",
        "Parameter_0113",
        "Parameter_0114",
        "Parameter_0115",
        "Parameter_0145",
        "Parameter_0152"
      ],
      "cross_references": [],
      "initialization_order": "22",
      "comments": "Summary\nThis function polymerizes DNA bidirectionally from oriC to terC of both the leading and lagging strands.  It models the locations of all of the replisome machinery proteins, and applies limits to replication (energy, coordination of strands, availibility of ligases, SSBs,...).\n\nReferences\n\nMirkin, E.V., Mirkin, S.M. (2007). Replication fork stalling at natural impediments. Microbiology and molecular biology reviews 71: 13-35.\nMirkin, E.V., Mirkin, S.M. (2005). Mechanisms of Transcription-replication collisions in bacteria. molecular and cellular biology 25: 888-895.\nMirkin, E.V., Roa, D.C., Nudler, E., Mirkin, S.M. (2006). Transcription regulatory elements are punctuation marks for dna replication. PNAS 103: 7276-7281.\nMiyata, M. Cell Division. Molecular biology and pathogenicity of mycoplasmas. Razin, S., Herrmann, R. Kluwer Academic/Plenum Publishers, 2002. 117-130.\nRudolph, C.J., Dhillon, P., Moore, T., Lloyd, R.G. (2007). Avoiding and resolving conflicts between DNA replication and transcription. DNA Repair 6: 981-993.\nMcGlynn, P., Guy, C.P. (2008). Replication forks blocked by protein-DNA complexes have limited stability in vitro. J. Mol. Biol. 381: 249-255.\n",
      "formed_complexes": [
        "DNA_POLYMERASE_2CORE_BETA_CLAMP_GAMMA_COMPLEX_PRIMASE",
        "DNA_POLYMERASE_CORE_BETA_CLAMP_GAMMA_COMPLEX",
        "DNA_POLYMERASE_CORE_BETA_CLAMP_PRIMASE",
        "DNA_POLYMERASE_HOLOENZYME",
        "MG_001_DIMER",
        "MG_091_OCTAMER",
        "REPLISOME"
      ],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "DnaAATP_polmerization_2mer_ADP",
        "DnaAATP_polmerization_3mer_ADP",
        "DnaAATP_polmerization_4mer_ADP",
        "DnaAATP_polmerization_5mer_ADP",
        "DnaAATP_polmerization_6mer_ADP",
        "DnaAATP_polmerization_7mer_ADP",
        "DnaAATP_polymerization_2mer",
        "DnaAATP_polymerization_3mer",
        "DnaAATP_polymerization_4mer",
        "DnaAATP_polymerization_5mer",
        "DnaAATP_polymerization_6mer",
        "DnaAATP_polymerization_7mer",
        "DnaA_activation",
        "DnaA_inactivation",
        "DnaA_reactivation"
      ],
      "wid": "Process_ReplicationInitiation",
      "name": "Replication Initiation",
      "parameters": [
        "Parameter_0116",
        "Parameter_0117",
        "Parameter_0118",
        "Parameter_0119",
        "Parameter_0120",
        "Parameter_0121",
        "Parameter_0122",
        "Parameter_0123",
        "Parameter_0124",
        "Parameter_0125",
        "Parameter_0126"
      ],
      "cross_references": [],
      "initialization_order": "10",
      "comments": "Replication initiates once DnaA accumulates at the replication origin, exposing a single-stranded DNA template to DNA polymerase. First, 7 DnaA molecules cooperatively accumulate at each of 4 high affinity boxes near the replication origin. Second, DnaA disrupts the double helix structure of DNA, exposing a region of single-stranded DNA. Third, two DNA polymerases bind the single-stranded region, and begin bidirectional leading strand replication. Next, lagging strand synthesis begins, and lagging strand Okazaki fragments are ligated by DNA ligase. Finally, replication completes when both polymerases reach the replication terminus.\n\nReplication initiation is modeled as the stochastic binding and release of DnaA molecules to the genome's 2297 DnaA boxes. DNA polymerization is modeled similar to transcription and translation; nucleotides and energy are distributed among actively polymerizing leading and lagging strands. DNA ligation proceeds subject to the availability of DNA ligase and its cofactor NAD.",
      "formed_complexes": [
        "MG_469_1MER_ADP",
        "MG_469_1MER_ATP",
        "MG_469_2MER_1ATP_ADP",
        "MG_469_2MER_ATP",
        "MG_469_3MER_2ATP_ADP",
        "MG_469_3MER_ATP",
        "MG_469_4MER_3ATP_ADP",
        "MG_469_4MER_ATP",
        "MG_469_5MER_4ATP_ADP",
        "MG_469_5MER_ATP",
        "MG_469_6MER_5ATP_ADP",
        "MG_469_6MER_ATP",
        "MG_469_7MER_6ATP_ADP",
        "MG_469_7MER_ATP"
      ],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "GTPHs_RibosomeAssembly_EngA",
        "GTPHs_RibosomeAssembly_EngB",
        "GTPHs_RibosomeAssembly_Era",
        "GTPHs_RibosomeAssembly_Obg",
        "GTPHs_RibosomeAssembly_RbfA",
        "GTPHs_RibosomeAssembly_RbgA"
      ],
      "wid": "Process_RibosomeAssembly",
      "name": "Ribosome assembly",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "3",
      "comments": "Assembly of the 30S and 50S ribosomal particles is a special case of macromolecular complexation which requires six energy-dependent GTPases &ndash; EngA, EngB, Era, Obg, RbfA, and RbgA. Similar to our models of RNA and protein maturation, we simulate ribosome assembly by (1) calculating maximal rates of 30S and 50S particle formation subject to available subunits, energy, and enzymes, and (2) successively forming particles until completion.",
      "formed_complexes": [
        "RIBOSOME_30S",
        "RIBOSOME_50S"
      ],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "PeptidylTRNAHs_ALA",
        "PeptidylTRNAHs_ARG",
        "PeptidylTRNAHs_ASN",
        "PeptidylTRNAHs_ASP",
        "PeptidylTRNAHs_CYS",
        "PeptidylTRNAHs_FMET",
        "PeptidylTRNAHs_GLN",
        "PeptidylTRNAHs_GLU",
        "PeptidylTRNAHs_GLY",
        "PeptidylTRNAHs_HIS",
        "PeptidylTRNAHs_ILE",
        "PeptidylTRNAHs_LEU",
        "PeptidylTRNAHs_LYS",
        "PeptidylTRNAHs_MET",
        "PeptidylTRNAHs_PHE",
        "PeptidylTRNAHs_PRO",
        "PeptidylTRNAHs_SER",
        "PeptidylTRNAHs_THR",
        "PeptidylTRNAHs_TRP",
        "PeptidylTRNAHs_TYR",
        "PeptidylTRNAHs_VAL",
        "RNACleavage_RNAseR_AMP",
        "RNACleavage_RNAseR_CMP",
        "RNACleavage_RNAseR_GMP",
        "RNACleavage_RNAseR_UMP"
      ],
      "wid": "Process_RNADecay",
      "name": "RNA decay",
      "parameters": [
        "Parameter_0127",
        "Parameter_0128"
      ],
      "cross_references": [],
      "initialization_order": "23",
      "comments": "First, transcripts are hydrolytically cleaved into 10-30 nucleotide fragments by ribonuclease R (MG_104_MONOMER) in an energy-dependent fashion [PUB_0039]. Second, RNA fragments are hydrolytically and spontaneously degraded, producing individual NMPs. RNA decay is modeled as a Poisson process. First, RNAs are stochastically selected for degradation with Poisson parameters equal to the experimentally measured decay rates. Second, available ribonuclease R and energy are distributed among the selected transcripts according to the length of each transcript and the measured kinetics of ribonuclease R, and transcripts are degraded.\n\nModels decay of RNA molecules as a poisson process with rate parameter,\n\nlambda = RNAs .* decayRates * object.simulationStep\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0039"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "MG471_MODIFICATION_001",
        "MG471_MODIFICATION_002",
        "MG471_MODIFICATION_003",
        "MG472_MODIFICATION_001",
        "MG472_MODIFICATION_002",
        "MG475_MODIFICATION_001",
        "MG479_MODIFICATION_001",
        "MG483_MODIFICATION_001",
        "MG483_MODIFICATION_002",
        "MG484_MODIFICATION_001",
        "MG484_MODIFICATION_002",
        "MG484_MODIFICATION_003",
        "MG485_MODIFICATION_001",
        "MG485_MODIFICATION_002",
        "MG486_MODIFICATION_001",
        "MG486_MODIFICATION_002",
        "MG486_MODIFICATION_003",
        "MG486_MODIFICATION_004",
        "MG487_MODIFICATION_001",
        "MG487_MODIFICATION_002",
        "MG488_MODIFICATION_001",
        "MG488_MODIFICATION_002",
        "MG488_MODIFICATION_003",
        "MG489_MODIFICATION_001",
        "MG490_MODIFICATION_001",
        "MG490_MODIFICATION_002",
        "MG492_MODIFICATION_001",
        "MG492_MODIFICATION_002",
        "MG493_MODIFICATION_001",
        "MG495_MODIFICATION_001",
        "MG495_MODIFICATION_002",
        "MG496_MODIFICATION_001",
        "MG497_MODIFICATION_001",
        "MG497_MODIFICATION_002",
        "MG499_MODIFICATION_001",
        "MG500_MODIFICATION_001",
        "MG500_MODIFICATION_002",
        "MG501_MODIFICATION_001",
        "MG501_MODIFICATION_002",
        "MG501_MODIFICATION_003",
        "MG501_MODIFICATION_004",
        "MG501_MODIFICATION_005",
        "MG502_MODIFICATION_001",
        "MG502_MODIFICATION_002",
        "MG502_MODIFICATION_003",
        "MG502_MODIFICATION_004",
        "MG503_MODIFICATION_001",
        "MG503_MODIFICATION_002",
        "MG504_MODIFICATION_001",
        "MG504_MODIFICATION_002",
        "MG504_MODIFICATION_003",
        "MG506_MODIFICATION_001",
        "MG507_MODIFICATION_001",
        "MG508_MODIFICATION_001",
        "MG508_MODIFICATION_002",
        "MG508_MODIFICATION_003",
        "MG509_MODIFICATION_001",
        "MG509_MODIFICATION_002",
        "MG509_MODIFICATION_003",
        "MG510_MODIFICATION_001",
        "MG510_MODIFICATION_002",
        "MG510_MODIFICATION_003",
        "MG511_MODIFICATION_001",
        "MG511_MODIFICATION_002",
        "MG512_MODIFICATION_001",
        "MG512_MODIFICATION_002",
        "MG512_MODIFICATION_003",
        "MG513_MODIFICATION_001",
        "MG513_MODIFICATION_002",
        "MG513_MODIFICATION_003",
        "MG514_MODIFICATION_001",
        "MG514_MODIFICATION_002",
        "MG518_MODIFICATION_001",
        "MG518_MODIFICATION_002",
        "MG519_MODIFICATION_001",
        "MG519_MODIFICATION_002",
        "MG519_MODIFICATION_003",
        "MG520_MODIFICATION_001",
        "MG523_MODIFICATION_001",
        "MG523_MODIFICATION_002",
        "MGrrnA16S_MODIFICATION_001",
        "MGrrnA16S_MODIFICATION_003",
        "MGrrnA16S_MODIFICATION_004",
        "MGrrnA16S_MODIFICATION_005",
        "MGrrnA16S_MODIFICATION_006",
        "MGrrnA23S_MODIFICATION_002",
        "MGrrnA23S_MODIFICATION_003",
        "MGrrnA23S_MODIFICATION_004",
        "MGrrnA23S_MODIFICATION_005",
        "MGrrnA23S_MODIFICATION_006",
        "MGrrnA23S_MODIFICATION_007"
      ],
      "wid": "Process_RNAModification",
      "name": "RNA modification",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "24",
      "comments": "Simulate r/tRNA modifications including\n\nrRNA methylation\n  MG_252_DIMER, \n  MG_346_DIMER, \n  MG_380_MONOMER, \n  MG_463_MONOMER\nrRNA pseudouridation\n  MG_209_MONOMER, \n  MG_370_MONOMER\ntRNA methylation\n  MG_347_DIMER, \n  MG_445_DIMER\ntRNA pseudouridation\n  MG_182_DIMER\ntRNA lysidine synthetase\n  MG_084_TETRAMER\ntRNA sulfur transfer\n  MG_295_MONOMER, \n  MG_372_MONOMER\ntRNA uridine 5-carboxymethylaminomethyl modification [PUB_0055]\n  MG_008_379_TETRAMER\n\n\nAlgorithm\nWhile(true)\n  \n  Calculate numbers of substrates that can be modified based on substrate, metabolite, enzyme availability and kinetics.\n  Randomly select substrate to modify weighted by limits\n  \n  \nEnd",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0055"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "RNACleavage_DeaD_AMP",
        "RNACleavage_DeaD_CMP",
        "RNACleavage_DeaD_GMP",
        "RNACleavage_DeaD_UMP",
        "RNACleavage_RNAseIII_AMP",
        "RNACleavage_RNAseIII_CMP",
        "RNACleavage_RNAseIII_GMP",
        "RNACleavage_RNAseIII_UMP",
        "RNACleavage_RNAseJ_AMP",
        "RNACleavage_RNAseJ_CMP",
        "RNACleavage_RNAseJ_GMP",
        "RNACleavage_RNAseJ_UMP",
        "RNACleavage_RNAseP_AMP",
        "RNACleavage_RNAseP_CMP",
        "RNACleavage_RNAseP_GMP",
        "RNACleavage_RNAseP_UMP",
        "RNACleavage_RsgA_AMP",
        "RNACleavage_RsgA_CMP",
        "RNACleavage_RsgA_GMP",
        "RNACleavage_RsgA_UMP"
      ],
      "wid": "Process_RNAProcessing",
      "name": "RNA processing",
      "parameters": [
        "Parameter_0129",
        "Parameter_0130",
        "Parameter_0131",
        "Parameter_0132",
        "Parameter_0133",
        "Parameter_0134",
        "Parameter_0135"
      ],
      "cross_references": [],
      "initialization_order": "25",
      "comments": "Following transcription rRNA, tRNA, and tmRNA transcripts are cleaved, modified, and aminoacylated. First, 45S rRNA transcripts are cleaved by ribonuclease III (MG_367_DIMER) into 5S, 16S, and 23S rRNA precursors [PUB_0038, PUB_0039]. Next these precursors are cleaved at their 3' and 5' ends by ribonuclease J and RgsA [PUB_0038]. Similarly the 5' ends of each tRNA and tmRNA species are cleaved by ribonuclease P [PUB_0039, PUB_0649]. Ribonuclease III also cleaves scRNA at two sites [PUB_0039]. Second, 13 enzymes formylate, lysidinate, methylate, pseudouridylate, and thiolate 86 specific rRNA and tRNA bases. Third 19 tRNA synthetases conjugate 19 amino acids to 37 tRNA and tmRNA species, and 2 tRNA transferases complete the aminoacylation of the formylmethionine and glutamine tRNAs.\n\nrRNA, tRNA, and tmRNA cleavage, modification, and aminoacylation are modeled motivated by mass-action kinetics. First, the maximum rate of maturation of each RNA species is calculated based on (1) the abundance of immature transcripts, (2) the abundance of substrates and enzymes required to cleave or modify each RNA species, and (3) the experimentally measured kinetic rate of each enzyme required to cleave or modify each RNA species. Second, RNA maturations are randomly selected according to the calculated maximum rates. Finally, steps (1) and (2) are repeated until insufficient resources are available to mature additional RNAs.\n\nprecusor r/s/t RNA cleavage\n\n\n\n\tSubstrate\n\tEnzyme\n\tKinetics\n\tCofactors\n\n\n\n\n\t30S RNA ⇒ pre 16/17S RNA, p23S RNA, 9s RNA\n\tRNAseIII, MG_367\n\t\n\t\n\n\n\tpre 16/17S RNA ⇒ 16S RNA\n\t5' end:rnjA, MG_139; 3' end:rgsA, MG_110\n\t\n\t\n\n\n\tp23S RNA ⇒ 23S RNA\n\t5' end:rnjA, MG_139\n\t\n\t\n\n\n\t9 S RNA ⇒ 5S RNA\n\t\n\t\n\t\n\n\n\t3' end tRNA precursors\n\tRNAseIII, MG_367\n\t\n\t\n\n\n\t5' end tRNA precursors\n\tRNaseP, MG_0003, MG_465\n\t0.027 1/s [PUB_0013]\n\tMg2+ [PUB_0013]\n\n\n\tscRNA (MG_0001) precusors\n\tRNAseIII, MG_367\n\t\n\t\n\n\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0013",
        "PUB_0038",
        "PUB_0039",
        "PUB_0649"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "MG_191_TerminalOrganelleAssembly_01",
        "MG_192_TerminalOrganelleAssembly_01",
        "MG_217_TerminalOrganelleAssembly_01",
        "MG_218_TerminalOrganelleAssembly_01",
        "MG_218_TerminalOrganelleAssembly_02",
        "MG_312_TerminalOrganelleAssembly_01",
        "MG_312_TerminalOrganelleAssembly_02",
        "MG_317_TerminalOrganelleAssembly_01",
        "MG_318_TerminalOrganelleAssembly_01",
        "MG_386_TerminalOrganelleAssembly_01"
      ],
      "wid": "Process_TerminalOrganelleAssembly",
      "name": "Terminal organelle assembly",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "26",
      "comments": "The terminal is a 300 &times; 80 nm electron-dense, membrane-bound extension of the cell which gives M. genitalium its characteristic flask shape, and is involved in adhesion, gliding motility, and cell division. The terminal organelle is composed of protein and glyolipids. The protein fraction of the terminal organelle is composed of 5 cytosolic and 3 integral membrane proteins.\n\nDuring growth the terminal organelle is duplicated, and during cell division the second terminal organelle migrates to the opposite pole.\n\nTerminal organelle assembly has been reviewed by Krause and Balish [PUB_0408], and the 10 protein monomer incorporation steps described by Krause and Balish are modeled as Boolean rules. \n\nAssembles terminal organelle with 8 proteins\n\nHMW1-3\nMgPa\nP32, P65, P110, P200\n\n\nEach of 8 proteins is assembled into terminal organelle if the proteins that are needed to localize it are already incorporated into the terminal organelle, or in the case of HMW1 and HMW2 are both present in the cytosol and can localize together.\n\nHMW1, HMW2 are mutually required for localization\nMHW3 requires HMW1, HMW2 for localization\n\n \nProteins are incorporated according to one of two patterns\n\ncytoplasm ⇒ terminal organelle cytoplasma\nmembrane ⇒ terminal organelle membrane\n\n\nReferences\n\nPUB_0088\nPUB_0091\nPUB_0406\nPUB_0407\nPUB_0408\nPUB_0409\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0088",
        "PUB_0091",
        "PUB_0406",
        "PUB_0407",
        "PUB_0408",
        "PUB_0409"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "RnaPolymerization_ATP",
        "RnaPolymerization_CTP",
        "RnaPolymerization_GTP",
        "RnaPolymerization_UTP"
      ],
      "wid": "Process_Transcription",
      "name": "Transcription",
      "parameters": [
        "Parameter_0136",
        "Parameter_0142",
        "Parameter_0143"
      ],
      "cross_references": [],
      "initialization_order": "14",
      "comments": "At the top level, each RNA polymerase is simulated as a Markov chain consisting of four states – free, non-specifically bound to the genome, bound to a specific transcription start site, and actively transcribing a transcription unit. First, the state of each RNA polymerase is updated according to experimentally measured state occupancies. Second, RNA polymerases which transition to the specifically bound state are bound to specific transcription start sites according to experimentally measured transcript abundances, half lives, and the active transcriptional regulation. Subject to the availability of initiation factors, specifically bound RNA polymerases next transition to the active state. Next, the available elongation factors and NTPs are allocated among the actively transcribing RNA polymerases. Finally, subject to the availability of termination factors, completed transcripts are released, and the corresponding RNA polymerases are released to the free state.\n\nEvolves the state of RNA polymerase using a markov chain model with four states\n\nactively translating\nspecifically bound\nnon-specifically bound\nfree\n\n\nTransition probabilities are designed to maintain the occupancy of each state within a narrow window around their expected values. Transition probability are determined by four logistic control functions. These can be tuned with the constants\n\nrnaPolymeraseStateExpectations\nrnaPolymeraseStateLogisticConstants\n\n\nRNA polymerase are created in the free state.\n\nActively translating state\n\nRelease sigma factor if after first second of elongation\nElongate transcript according to nucleic acid limits (transcriptionLimits) if elongation factors are available\nIf transcription complete and termination factor available\n   \n   release transcript\n   transition RNA polymerase to free state\n   increment gene expression\n   \n   Otherwise remain in active state\n\n\nSpecifically bound State\n\nCan transition to active, specifically bound, non-specifically bound, or free states\nTransition into state only if a free sigma factor is available\n  \n  Decrement number of free sigma factors\n  Pick a transcription unit (tu) to bind to according to\n  Expression transcription unit i~prob(ribosome releases tu i|ribosome active)\n\t   =prob(ribosome within RNA polymerase elongation rate bases of length of tu i|ribosome active)\n\t   =prob(ribosome within RNA polymerase elongation rate bases of length of tu i|ribosome active, bound to tu i)*prob(ribosome bound to tu i|ribosome active)\n\t   =[(RNA polymerase transcription rate)/(length of tu i)] * [(length of tu i)*prob(binding tu i|binding)]\n  prob(binding tu i | binding)~expression tu i\n  \n  \n\n\nNon-specifically bound state\n\nCan transition to specifically bound, non-specifically bound, or free states\n\n\nFree state\n\nCan transition to specifically bound, non-specifically bound, or free states\n\n\nTermination\nTranscription termination is currently not explicitly modeled.\n\nTranscription can be terminated intrinsically by a RNA stem loop followed by a short U-rich segement, or extrinsically by a &rho; helicase and energy-dependent mechanism [PUB_0039].",
      "formed_complexes": [
        "RNA_POLYMERASE_HOLOENZYME"
      ],
      "synonyms": [],
      "references": [
        "PUB_0039"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [],
      "wid": "Process_TranscriptionalRegulation",
      "name": "Transcriptional regulation",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "9",
      "comments": "Introduction\nTranscription regulation is modeled as a two-state (free, bound) Markov chain. Following maturation, transcriptional regulators first enter the free state. Next free transcriptional regulators stably bind promoters according to experimentally observed transcript abundance fold changes. Finally, transcriptional regulators remain stably bound to promoters, and bias the RNA polymerase-promoter binding probabilities.\n\nSimulates\n\nAffinity – Binding of transcription factors to transcription unit promoters\nActivity – Effect of bound transcription factors on recruitment of RNA polymerase to each transcription unit promoter\n\nUsing experimentally observed the experimentally observed fold change\nexpression effect of each transcription factor on each promoter.\n\nAffinity\nBinds enzymes to promoters assuming:\n\nTranscription factors have high affinity for promoters\nTranscription factors bind promoters rapidly\nTranscription factors bind promoters stably over time\nOnly 1 copy of a transcription factor can bind each promoter\n\n\nConsequently, at each time step we simulate that each free transcription factor binds randomly binds unoccupied promoters (no copy of that transcription factor is already bound to the promoter). Random transcription factor-promoter binding is weighted by the affinity of each transcription factor for each promoter.\n\nBecause transcription factor-promoter affinities are generally not experimentally observed, we set the relative transcription factor-promoter affinities numerically equal to the absolute value of the log of the transcription factor fold change activities.\n\nActivity\nThe effect of bound transcription factors on the recruitment of RNA polymerase and the expression of transcription units is simulated here and incorporated into the calculation of the RNA polymerase transcription unit promoter binding probabilities in the transcription module. Specifically, the wild-type average RNA polymerase transcription unit promoter binding probabilities are multiplied by the binding probability fold change effects simulated in this module.\n\nThe RNA polymerase binding probability fold change is simulated for each promoter as the product of the observed expression fold change effects of each bound transcription factor. When a promoter is bound by a single transcription factor the net RNA polymerase binding probability fold change is the observed expression fold change of that transcription factor. When a promoter is bound by multiple transcription units the net RNA polymerase binding probability fold change is given by the product of the individual fold change effects of the bound transcription factors.\n\nReferences\n\nLacramioara Bintu, Nicolas E Buchler, Hernan G Garcia, Ulrich Gerland, Terence Hwa, Jane Kondev and Rob Phillips (2005). Transcriptional regulation by the numbers: models. Curr Opin Genet Dev. 15:116-24. [PUB_0459]\nLacramioara Bintu, Nicolas E Buchler, Hernan G Garcia, Ulrich Gerland, Terence Hwa, Jane Kondev and Rob Phillips (2005). Transcriptional regulation by the numbers: applications. Curr Opin Genet Dev. 15:125-35. [PUB_0460]\n",
      "formed_complexes": [],
      "synonyms": [],
      "references": [
        "PUB_0459",
        "PUB_0460"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "ProteinPolymerization_ALA",
        "ProteinPolymerization_ARG",
        "ProteinPolymerization_ASN",
        "ProteinPolymerization_ASP",
        "ProteinPolymerization_CYS",
        "ProteinPolymerization_GLN",
        "ProteinPolymerization_GLU",
        "ProteinPolymerization_GLY",
        "ProteinPolymerization_HIS",
        "ProteinPolymerization_ILE",
        "ProteinPolymerization_LEU",
        "ProteinPolymerization_LYS",
        "ProteinPolymerization_MET",
        "ProteinPolymerization_PHE",
        "ProteinPolymerization_PRO",
        "ProteinPolymerization_SER",
        "ProteinPolymerization_THR",
        "ProteinPolymerization_TRP",
        "ProteinPolymerization_TYR",
        "ProteinPolymerization_VAL"
      ],
      "wid": "Process_Translation",
      "name": "Translation",
      "parameters": [
        "Parameter_0137",
        "Parameter_0138"
      ],
      "cross_references": [],
      "initialization_order": "7",
      "comments": "Translation is modeled as a hierarchical process similar to transcription. At the top level each ribosome can exist in four states – free 30S and 50S ribosomal particles and initiation factor 3 (IF-3), an assembled 70S ribosomal particle - IF-3 complex, an actively translating 70S ribosomal particle, and a stalled 70S ribosomal particle. First, 70S ribosomal particle - IF-3 complexes are assembled according to available subunits. Second, newly assembled complexes stochastically bind mRNAs according to their abundance. Permitting the availability of initiation factors 1 and 2, ribosomes progress to the actively translating state, and initiation factor 1 is released to the free pool. Next, the available elongation factors and aminoacylated tRNAs are allocated among the actively translating ribosomes. Finally, subject to the availability of termination and recycling factors, completed polypeptides are released, and the corresponding ribosomes are disassembled and released to the free state.\n\nEvolves the states of ribosomes among two states\n\nactively translating\nfree\n\n\nTransition to from the free state to the actively translating state is allowed when \n\nribosome binding factor A is present\ninitiation factors (IF-1, IF-2, and IF-3) are present \none unit of energy (GTP) is available.\n\nAt this time the ribosome binds an mRNA randomly with uniform probability.\n\nAt the next iteration the initiation factors are released when the first amino acid, f-methionine binds and elongation begins, assuming that elongation factors (EF-tu, TS, and G) and energy (GTP) is availble.\n\nASSUMPTION made here is that one of each is sufficient for each ribosome, but need a separate set for each ribosome. So each ribosome can only translate if a full set exists for it. Also, for cases in which translation of a peptide finishes partway through the time step, the EFs are free, but haven't added the complexity of another ribosome being able to take up EFs partway through the timestep.\n\nFinally, once all amino acids of a protein have been translated, termination occurs if \n\nat least one terminator (RF-1) available\nat least one recycling factor available\nat least one elongation factor G available\nat least one trigger factor available\nenergy is available. \n\nThe ribosome will be available to bind mRNA at the following iteration.\n\nRibosomes are created in the free state.\n\nStalled Ribosomes\nThe translation of stalled ribosomes is terminated by the protein SmpB and small non-coding RNA tmRNA. First, SmpB identifies a stalled ribosome. Second, SmpB recruits an alanine-conjugated tmRNA, and the tRNA domain of the tmRNA binds the ribosome A site. Third, the mRNA domain of the tmRNA expels and replaces the mRNA, becoming the template for a 26 amino acid long C-terminal proteolysis tag which targets the nascent peptide to the FtsH protease. Next, translation resumes and the proteolysis tag is synthesized. Upon release the nascent peptide is identified and cleaved by the FtsH protease as described below.\n\nThe stalled ribosome response is modeled as a stochastic, low probability event within the actively translating state of the translation module. First, if the translation of a peptide does not advance within a time step, then with small probability, and subject to the availability of SmpB and tmRNA, the ribosome transitions to the stalled state. Second, the stalled state is modeled identically to the actively translating state, except that the tmRNA is used as the mRNA template, and upon termination the peptide enters the proteolysis tagged pool to be degraded by the FtsH protease.\n\nAmino acid misincorporation\nAmino acid misincorporation was studied by Zaher and Green [PUB_0028]. Amino acid misincorporation is not currently modeled.",
      "formed_complexes": [
        "RIBOSOME_30S_IF3",
        "RIBOSOME_70S"
      ],
      "synonyms": [],
      "references": [
        "PUB_0028"
      ],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    },
    {
      "reactions": [
        "MG471_Aminoacylation",
        "MG472_Aminoacylation",
        "MG475_Aminoacylation",
        "MG479_Aminoacylation",
        "MG483_Aminoacylation",
        "MG484_Aminoacylation",
        "MG485_Aminoacylation",
        "MG486_Aminoacylation",
        "MG487_Aminoacylation",
        "MG488_Aminoacylation",
        "MG488_Formyltransferase",
        "MG489_Aminoacylation",
        "MG490_Aminoacylation",
        "MG492_Aminoacylation",
        "MG493_Aminoacylation",
        "MG495_Aminoacylation",
        "MG496_Aminoacylation",
        "MG497_Aminoacylation",
        "MG499_Aminoacylation",
        "MG500_Aminoacylation",
        "MG501_Aminoacylation",
        "MG502_Amidotransferase",
        "MG502_Aminoacylation",
        "MG503_Aminoacylation",
        "MG504_Aminoacylation",
        "MG506_Aminoacylation",
        "MG507_Aminoacylation",
        "MG508_Aminoacylation",
        "MG509_Aminoacylation",
        "MG510_Aminoacylation",
        "MG511_Aminoacylation",
        "MG512_Aminoacylation",
        "MG513_Aminoacylation",
        "MG514_Aminoacylation",
        "MG518_Aminoacylation",
        "MG519_Aminoacylation",
        "MG520_Aminoacylation",
        "MG523_Aminoacylation",
        "MG_0004_Aminoacylation"
      ],
      "wid": "Process_tRNAAminoacylation",
      "name": "tRNA aminoacylation",
      "parameters": [],
      "cross_references": [],
      "initialization_order": "27",
      "comments": "Uses greedy algorithm to simulate tRNA aminacylation (complexation of tRNAs with the specific amino acids that aminoacylate them).\n\nDeterministically activate tRNAs upto the minimum of free tRNAs and amino acids, proportional to free tRNAs\nStoichastically activate residual tRNAs using residual amino acids with probabilities proportional to remaining free tRNAs\n\n\nCalculates the energy cost of tRNA aminoacylation assuming 1 ATP per tRNA aminoacylation.",
      "formed_complexes": [],
      "synonyms": [],
      "references": [],
      "created_date": "2012-10-01 15:07:35",
      "last_updated_date": "2012-10-01 15:14:00",
      "model": "Process",
      "type": []
    }
  ]
}